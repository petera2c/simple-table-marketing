{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/constants/strings/seo.ts"],"sourcesContent":["export const SEO_STRINGS = {\n  site: {\n    url: \"https://www.simple-table.com\",\n    ogImage: \"https://www.simple-table.com/og-image.jpg\",\n    defaultKeywords:\n      \"react table, react grid, react spreadsheet, simple table, react data table, business table component, best react table\",\n  },\n  home: {\n    title: \"Simple Table - The React Table That Makes Data Fun! 🚀\",\n    description:\n      \"Say goodbye to boring tables! Simple Table is a delightfully powerful React grid that makes your data dance. With lightning-fast editing, smooth scrolling, and pixel-perfect design, it's the table your data deserves! ✨\",\n    keywords:\n      \"react table component, react grid, react spreadsheet, business table, data visualization, react data table, simple table, best react table\",\n  },\n  docs: {\n    title: \"Simple Table Docs - Your Guide to Table Mastery 📚\",\n    description:\n      \"Level up your table game! Our crystal-clear docs will guide you through Simple Table's powerful features. From basic setup to advanced customization, we've got your back! 💪\",\n    keywords:\n      \"simple table documentation, react table guide, react grid tutorial, simple table setup, react table implementation, table customization\",\n  },\n  themeBuilder: {\n    title: \"Simple Table Theme Builder - Design Your Perfect Table ✨\",\n    description:\n      \"Create beautiful, custom table designs that match your brand. Our intuitive theme builder makes it easy to adjust colors, spacing, and typography for a professional look that fits your application perfectly.\",\n    keywords:\n      \"simple table theme builder, react table customization, table styling, react grid theme, table appearance customization, table design, professional table themes\",\n  },\n} as const;\n"],"names":[],"mappings":";;;AAAO,MAAM,cAAc;IACzB,MAAM;QACJ,KAAK;QACL,SAAS;QACT,iBACE;IACJ;IACA,MAAM;QACJ,OAAO;QACP,aACE;QACF,UACE;IACJ;IACA,MAAM;QACJ,OAAO;QACP,aACE;QACF,UACE;IACJ;IACA,cAAc;QACZ,OAAO;QACP,aACE;QACF,UACE;IACJ;AACF","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/SEO.tsx"],"sourcesContent":["import Head from \"next/head\";\nimport { SEO_STRINGS } from \"../constants/strings/seo\";\n\ninterface SEOProps {\n  title: string;\n  description: string;\n  keywords?: string;\n  ogImage?: string;\n  canonicalUrl?: string;\n}\n\nconst SEO = ({\n  title,\n  description,\n  keywords = SEO_STRINGS.site.defaultKeywords,\n  ogImage = SEO_STRINGS.site.ogImage,\n  canonicalUrl,\n}: SEOProps) => {\n  const fullUrl = canonicalUrl ? `${SEO_STRINGS.site.url}${canonicalUrl}` : SEO_STRINGS.site.url;\n\n  return (\n    <Head>\n      {/* Basic Meta Tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n\n      {/* Open Graph / Facebook */}\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={fullUrl} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={ogImage} />\n\n      {/* Twitter */}\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:url\" content={fullUrl} />\n      <meta property=\"twitter:title\" content={title} />\n      <meta property=\"twitter:description\" content={description} />\n      <meta property=\"twitter:image\" content={ogImage} />\n\n      {/* Canonical URL */}\n      {canonicalUrl && <link rel=\"canonical\" href={fullUrl} />}\n\n      {/* Structured Data */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"SoftwareApplication\",\n          name: \"Simple Table Core\",\n          applicationCategory: \"DeveloperApplication\",\n          operatingSystem: \"Web\",\n          offers: {\n            \"@type\": \"Offer\",\n            price: \"0\",\n            priceCurrency: \"USD\",\n          },\n          description: description,\n          url: SEO_STRINGS.site.url,\n        })}\n      </script>\n    </Head>\n  );\n};\n\nexport default SEO;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAUA,MAAM,MAAM,CAAC,EACX,KAAK,EACL,WAAW,EACX,WAAW,kIAAA,CAAA,cAAW,CAAC,IAAI,CAAC,eAAe,EAC3C,UAAU,kIAAA,CAAA,cAAW,CAAC,IAAI,CAAC,OAAO,EAClC,YAAY,EACH;IACT,MAAM,UAAU,eAAe,GAAG,kIAAA,CAAA,cAAW,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,GAAG,kIAAA,CAAA,cAAW,CAAC,IAAI,CAAC,GAAG;IAE9F,qBACE,8OAAC,oKAAA,CAAA,UAAI;;0BAEH,8OAAC;0BAAO;;;;;;0BACR,8OAAC;gBAAK,MAAK;gBAAc,SAAS;;;;;;0BAClC,8OAAC;gBAAK,MAAK;gBAAW,SAAS;;;;;;0BAG/B,8OAAC;gBAAK,UAAS;gBAAU,SAAQ;;;;;;0BACjC,8OAAC;gBAAK,UAAS;gBAAS,SAAS;;;;;;0BACjC,8OAAC;gBAAK,UAAS;gBAAW,SAAS;;;;;;0BACnC,8OAAC;gBAAK,UAAS;gBAAiB,SAAS;;;;;;0BACzC,8OAAC;gBAAK,UAAS;gBAAW,SAAS;;;;;;0BAGnC,8OAAC;gBAAK,UAAS;gBAAe,SAAQ;;;;;;0BACtC,8OAAC;gBAAK,UAAS;gBAAc,SAAS;;;;;;0BACtC,8OAAC;gBAAK,UAAS;gBAAgB,SAAS;;;;;;0BACxC,8OAAC;gBAAK,UAAS;gBAAsB,SAAS;;;;;;0BAC9C,8OAAC;gBAAK,UAAS;gBAAgB,SAAS;;;;;;YAGvC,8BAAgB,8OAAC;gBAAK,KAAI;gBAAY,MAAM;;;;;;0BAG7C,8OAAC;gBAAO,MAAK;0BACV,KAAK,SAAS,CAAC;oBACd,YAAY;oBACZ,SAAS;oBACT,MAAM;oBACN,qBAAqB;oBACrB,iBAAiB;oBACjB,QAAQ;wBACN,SAAS;wBACT,OAAO;wBACP,eAAe;oBACjB;oBACA,aAAa;oBACb,KAAK,kIAAA,CAAA,cAAW,CAAC,IAAI,CAAC,GAAG;gBAC3B;;;;;;;;;;;;AAIR;uCAEe","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/demos/CellRendererDemo.tsx"],"sourcesContent":["import { SimpleTable, HeaderObject } from \"simple-table-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStar,\n  faCheckCircle,\n  faTimesCircle,\n  faExclamationTriangle,\n  faEnvelope,\n  faPhone,\n  faGlobe,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"simple-table-core/styles.css\";\n\n// Sample data\nconst data = [\n  {\n    rowMeta: { rowId: 1, isExpanded: false },\n    rowData: {\n      id: 1,\n      name: \"John Doe\",\n      email: \"john@example.com\",\n      phone: \"+1 (555) 123-4567\",\n      website: \"johndoe.com\",\n      status: \"active\",\n      progress: 75,\n      rating: 4.5,\n      verified: true,\n    },\n  },\n  {\n    rowMeta: { rowId: 2, isExpanded: false },\n    rowData: {\n      id: 2,\n      name: \"Jane Smith\",\n      email: \"jane@example.com\",\n      phone: \"+1 (555) 987-6543\",\n      website: \"janesmith.io\",\n      status: \"inactive\",\n      progress: 30,\n      rating: 3.2,\n      verified: false,\n    },\n  },\n  {\n    rowMeta: { rowId: 3, isExpanded: false },\n    rowData: {\n      id: 3,\n      name: \"Bob Johnson\",\n      email: \"bob@example.com\",\n      phone: \"+1 (555) 567-8901\",\n      website: \"bobjohnson.dev\",\n      status: \"pending\",\n      progress: 50,\n      rating: 4.0,\n      verified: true,\n    },\n  },\n  {\n    rowMeta: { rowId: 4, isExpanded: false },\n    rowData: {\n      id: 4,\n      name: \"Alice Williams\",\n      email: \"alice@example.com\",\n      phone: \"+1 (555) 234-5678\",\n      website: \"alicew.net\",\n      status: \"active\",\n      progress: 90,\n      rating: 4.8,\n      verified: true,\n    },\n  },\n  {\n    rowMeta: { rowId: 5, isExpanded: false },\n    rowData: {\n      id: 5,\n      name: \"Charlie Brown\",\n      email: \"charlie@example.com\",\n      phone: \"+1 (555) 876-5432\",\n      website: \"charlieb.org\",\n      status: \"inactive\",\n      progress: 15,\n      rating: 2.7,\n      verified: false,\n    },\n  },\n];\n\n// Define headers with custom cell renderers\nconst headers: HeaderObject[] = [\n  { accessor: \"id\", label: \"ID\", width: 60, type: \"number\" },\n  { accessor: \"name\", label: \"Name\", width: 180, type: \"string\" },\n  {\n    accessor: \"email\",\n    label: \"Email\",\n    width: 200,\n    type: \"string\",\n    cellRenderer: ({ row }) => (\n      <div className=\"flex items-center\">\n        <FontAwesomeIcon icon={faEnvelope} className=\"text-gray-400 mr-2\" />\n        <a href={`mailto:${row.rowData.email}`} className=\"text-blue-600 hover:underline\">\n          {row.rowData.email}\n        </a>\n      </div>\n    ),\n  },\n  {\n    accessor: \"phone\",\n    label: \"Phone\",\n    width: 180,\n    type: \"string\",\n    cellRenderer: ({ row }) => (\n      <div className=\"flex items-center\">\n        <FontAwesomeIcon icon={faPhone} className=\"text-gray-400 mr-2\" />\n        <a href={`tel:${row.rowData.phone}`} className=\"text-blue-600 hover:underline\">\n          {row.rowData.phone}\n        </a>\n      </div>\n    ),\n  },\n  {\n    accessor: \"website\",\n    label: \"Website\",\n    width: 150,\n    type: \"string\",\n    cellRenderer: ({ row }) => (\n      <div className=\"flex items-center\">\n        <FontAwesomeIcon icon={faGlobe} className=\"text-gray-400 mr-2\" />\n        <a\n          href={`https://${row.rowData.website}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-blue-600 hover:underline\"\n        >\n          {row.rowData.website}\n        </a>\n      </div>\n    ),\n  },\n  {\n    accessor: \"status\",\n    label: \"Status\",\n    width: 120,\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      const status = row.rowData.status as string;\n      let color = \"gray\";\n      let icon = faCheckCircle;\n\n      if (status === \"active\") {\n        color = \"green\";\n        icon = faCheckCircle;\n      } else if (status === \"inactive\") {\n        color = \"red\";\n        icon = faTimesCircle;\n      } else if (status === \"pending\") {\n        color = \"yellow\";\n        icon = faExclamationTriangle;\n      }\n\n      return (\n        <div className={`flex items-center text-${color}-500 capitalize`}>\n          <FontAwesomeIcon icon={icon} className=\"mr-1\" />\n          {status}\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"progress\",\n    label: \"Progress\",\n    width: 150,\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      const progress = row.rowData.progress as number;\n      let color = \"blue\";\n\n      if (progress < 30) color = \"red\";\n      else if (progress < 70) color = \"yellow\";\n      else color = \"green\";\n\n      return (\n        <div className=\"w-full\">\n          <div className=\"text-xs mb-1\">{progress}%</div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n            <div className={`bg-${color}-500 h-2.5 rounded-full`} style={{ width: `${progress}%` }} />\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"rating\",\n    label: \"Rating\",\n    width: 150,\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      const rating = row.rowData.rating as number;\n      const fullStars = Math.floor(rating);\n      const hasHalfStar = rating % 1 >= 0.5;\n\n      return (\n        <div className=\"flex items-center\">\n          <div className=\"flex text-yellow-400 mr-2\">\n            {[...Array(5)].map((_, i) => (\n              <FontAwesomeIcon\n                key={i}\n                icon={faStar}\n                className={\n                  i < fullStars\n                    ? \"text-yellow-400\"\n                    : i === fullStars && hasHalfStar\n                    ? \"text-yellow-400 opacity-50\"\n                    : \"text-gray-300\"\n                }\n              />\n            ))}\n          </div>\n          <span>{rating.toFixed(1)}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"verified\",\n    label: \"Verified\",\n    width: 100,\n    type: \"boolean\",\n    cellRenderer: ({ row }) => {\n      const verified = row.rowData.verified as boolean;\n\n      return verified ? (\n        <span className=\"inline-flex items-center text-green-500\">\n          <FontAwesomeIcon icon={faCheckCircle} className=\"mr-1\" />\n          Yes\n        </span>\n      ) : (\n        <span className=\"inline-flex items-center text-red-500\">\n          <FontAwesomeIcon icon={faTimesCircle} className=\"mr-1\" />\n          No\n        </span>\n      );\n    },\n  },\n];\n\nconst CellRendererDemo = () => {\n  return <SimpleTable defaultHeaders={headers} rows={data} />;\n};\n\nexport default CellRendererDemo;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/CodeBlock.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy, faCheck, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { Highlight, themes } from \"prism-react-renderer\";\n\ntype ThemeType = \"dark\" | \"light\";\n\ninterface CodeBlockProps {\n  className?: string;\n  code: string;\n  initialTheme?: ThemeType;\n  language?: string;\n  showLineNumbers?: boolean;\n  showThemeToggle?: boolean;\n}\n\nconst CodeBlock = ({\n  className = \"\",\n  code = \"\",\n  initialTheme = \"dark\",\n  language = \"tsx\",\n  showLineNumbers = true,\n  showThemeToggle = true,\n}: CodeBlockProps) => {\n  code = code.toString();\n  const [copied, setCopied] = useState(false);\n  const [theme, setTheme] = useState<ThemeType>(initialTheme);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(code).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    });\n  };\n\n  const toggleTheme = () => {\n    setTheme((prev) => (prev === \"dark\" ? \"light\" : \"dark\"));\n  };\n\n  const selectedTheme = theme === \"dark\" ? themes.nightOwl : themes.nightOwlLight;\n\n  // Get language display name\n  const getLanguageDisplayName = () => {\n    const displayNames: Record<string, string> = {\n      jsx: \"React JSX\",\n      tsx: \"React TSX\",\n      javascript: \"JavaScript\",\n      typescript: \"TypeScript\",\n      css: \"CSS\",\n      html: \"HTML\",\n      bash: \"Shell\",\n      json: \"JSON\",\n    };\n\n    return displayNames[language] || language.toUpperCase();\n  };\n\n  // Filename extraction from first comment line (e.g. \"// SomeFile.tsx\")\n  const extractFilename = (): string | null => {\n    if (!code) return null;\n\n    const firstLine = code.trim().split(\"\\n\")[0];\n    if (firstLine.startsWith(\"// \") || firstLine.startsWith(\"/* \")) {\n      const potentialFilename = firstLine.replace(/^\\/\\/\\s*|^\\/\\*\\s*/, \"\").trim();\n      if (potentialFilename.includes(\".\")) {\n        return potentialFilename;\n      }\n    }\n    return null;\n  };\n\n  const filename = extractFilename();\n\n  return (\n    <div className={`rounded-md mb-6 overflow-hidden shadow-lg relative ${className}`}>\n      <div className=\"flex items-center justify-between px-4 py-2 bg-gray-900 text-gray-400 text-xs font-mono\">\n        <div className=\"flex items-center gap-2\">\n          <span>{getLanguageDisplayName()}</span>\n          {filename && (\n            <span className=\"text-gray-500 ml-2 border-l border-gray-700 pl-2\">{filename}</span>\n          )}\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {showThemeToggle && (\n            <button\n              className=\"flex items-center gap-1 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white px-2 py-1 rounded cursor-pointer transition-colors\"\n              onClick={toggleTheme}\n              title={theme === \"dark\" ? \"Switch to light theme\" : \"Switch to dark theme\"}\n            >\n              <FontAwesomeIcon icon={theme === \"dark\" ? faSun : faMoon} className=\"text-xs\" />\n            </button>\n          )}\n          <div\n            className=\"flex items-center gap-1 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white px-2 py-1 rounded cursor-pointer transition-colors\"\n            onClick={handleCopy}\n            aria-label=\"Copy code\"\n            title=\"Copy to clipboard\"\n          >\n            <FontAwesomeIcon icon={copied ? faCheck : faCopy} className=\"text-xs\" />\n            <span className=\"sm:inline hidden\">{copied ? \"Copied!\" : \"Copy\"}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto max-w-full\">\n        <Highlight\n          theme={selectedTheme}\n          code={filename ? code.replace(/^\\/\\/.*?\\n|^\\/\\*.*?\\n/, \"\") : code.trim()}\n          language={language as any}\n        >\n          {({ style, tokens, getLineProps, getTokenProps }) => (\n            <pre\n              className=\"p-4 overflow-auto text-sm max-h-[64vh]\"\n              style={{\n                ...style,\n                backgroundColor: theme === \"dark\" ? \"#011627\" : \"#FBFBFB\",\n              }}\n            >\n              {tokens.map((line, i) => {\n                // Check if this line is a special comment like \"// ... existing code ...\"\n                const isSpecialComment =\n                  line.length > 1 &&\n                  line[0].content.match(/\\/\\/|\\/\\*|#/) &&\n                  line.some((token) => token.content.includes(\"existing code\"));\n\n                const lineProps = getLineProps({ line });\n\n                return (\n                  <div\n                    key={i}\n                    {...lineProps}\n                    className={`table-row ${isSpecialComment ? \"opacity-60 italic\" : \"\"}`}\n                  >\n                    {showLineNumbers && (\n                      <span className=\"table-cell text-right pr-4 select-none opacity-50 text-xs w-8\">\n                        {i + 1}\n                      </span>\n                    )}\n                    <span className=\"table-cell whitespace-pre word-break\">\n                      {line.map((token, key) => (\n                        <span\n                          key={key}\n                          {...getTokenProps({ token })}\n                          className={token.types.includes(\"comment\") ? \"italic opacity-75\" : \"\"}\n                        />\n                      ))}\n                    </span>\n                  </div>\n                );\n              })}\n            </pre>\n          )}\n        </Highlight>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeBlock;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/hooks/useDemoCode.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useDemoCode = (demoPath: string) => {\n  const [demoCode, setDemoCode] = useState(\"\");\n\n  useEffect(() => {\n    const fetchDemoCode = async () => {\n      const response = await fetch(`/txt-demos/${demoPath}`);\n      const text = await response.text();\n      setDemoCode(text);\n    };\n\n    fetchDemoCode();\n  }, [demoPath]);\n\n  return demoCode;\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,CAAC;IAC1B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,UAAU;YACrD,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,YAAY;QACd;QAEA;IACF,GAAG;QAAC;KAAS;IAEb,OAAO;AACT","debugId":null}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/DocNavigationButtons.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { usePathname } from \"next/navigation\";\n\n// This should match the structure in DocsLayout.tsx\nconst docNavigation = [\n  // Getting Started\n  { id: \"installation\", path: \"/docs/installation\" },\n  { id: \"quick-start\", path: \"/docs/quick-start\" },\n\n  // Column Features\n  { id: \"column-properties\", path: \"/docs/column-properties\" },\n  { id: \"column-resizing\", path: \"/docs/column-resizing\" },\n  { id: \"column-reordering\", path: \"/docs/column-reordering\" },\n  { id: \"column-visibility\", path: \"/docs/column-visibility\" },\n  { id: \"column-pinning\", path: \"/docs/column-pinning\" },\n  { id: \"column-alignment\", path: \"/docs/column-alignment\" },\n  { id: \"column-sorting\", path: \"/docs/column-sorting\" },\n  { id: \"nested-headers\", path: \"/docs/nested-headers\" },\n\n  // Row Features\n  { id: \"row-grouping\", path: \"/docs/row-grouping\" },\n  { id: \"row-height\", path: \"/docs/row-height\" },\n\n  // Cell Features\n  { id: \"cell-editing\", path: \"/docs/cell-editing\" },\n  { id: \"cell-highlighting\", path: \"/docs/cell-highlighting\" },\n  { id: \"cell-renderer\", path: \"/docs/cell-renderer\" },\n\n  // Advanced Features\n  { id: \"pagination\", path: \"/docs/pagination\" },\n\n  // Customization\n  { id: \"themes\", path: \"/docs/themes\" },\n  { id: \"custom-icons\", path: \"/docs/custom-icons\" },\n  { id: \"custom-theme\", path: \"/docs/custom-theme\" },\n];\n\n// Map paths to labels for more readable navigation buttons\nconst pathToLabel: Record<string, string> = {\n  \"/docs/installation\": \"Installation\",\n  \"/docs/quick-start\": \"Quick Start\",\n  \"/docs/column-properties\": \"Column Properties\",\n  \"/docs/column-resizing\": \"Column Resizing\",\n  \"/docs/column-reordering\": \"Column Reordering\",\n  \"/docs/column-visibility\": \"Column Visibility\",\n  \"/docs/column-pinning\": \"Column Pinning\",\n  \"/docs/column-alignment\": \"Column Alignment\",\n  \"/docs/column-sorting\": \"Column Sorting\",\n  \"/docs/nested-headers\": \"Nested Headers\",\n  \"/docs/row-grouping\": \"Row Grouping\",\n  \"/docs/row-height\": \"Row Height\",\n  \"/docs/cell-editing\": \"Cell Editing\",\n  \"/docs/cell-highlighting\": \"Cell Highlighting\",\n  \"/docs/cell-renderer\": \"Cell Renderer\",\n  \"/docs/pagination\": \"Pagination\",\n  \"/docs/themes\": \"Themes\",\n  \"/docs/custom-icons\": \"Custom Icons\",\n  \"/docs/custom-theme\": \"Custom Theme\",\n};\n\n/**\n * Component for rendering dynamic next/previous navigation buttons based on the docs structure\n */\nconst DocNavigationButtons = () => {\n  const pathname = usePathname();\n\n  const { prevPage, nextPage } = useMemo(() => {\n    const currentIndex = docNavigation.findIndex((item) => item.path === pathname);\n\n    // If page not found in navigation, return empty\n    if (currentIndex === -1) {\n      return { prevPage: null, nextPage: null };\n    }\n\n    const prevPage = currentIndex > 0 ? docNavigation[currentIndex - 1] : null;\n    const nextPage =\n      currentIndex < docNavigation.length - 1 ? docNavigation[currentIndex + 1] : null;\n\n    return { prevPage, nextPage };\n  }, [pathname]);\n\n  if (!prevPage && !nextPage) {\n    return null;\n  }\n\n  return (\n    <motion.div\n      className=\"flex justify-between mt-12 pt-4 border-t border-gray-200\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5, delay: 0.9 }}\n    >\n      {prevPage ? (\n        <a\n          href={prevPage.path}\n          className=\"flex items-center gap-2 px-4 py-2 text-blue-600 hover:text-blue-800 transition-colors rounded-lg border border-transparent hover:border-blue-200 hover:bg-blue-50\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M15 19l-7-7 7-7\"\n            />\n          </svg>\n          Previous: {pathToLabel[prevPage.path]}\n        </a>\n      ) : (\n        <span></span>\n      )}\n\n      {nextPage && (\n        <a\n          href={nextPage.path}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-sm\"\n        >\n          Next: {pathToLabel[nextPage.path]}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </a>\n      )}\n    </motion.div>\n  );\n};\n\nexport default DocNavigationButtons;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/app/docs/cell-renderer/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { motion } from \"framer-motion\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCode } from \"@fortawesome/free-solid-svg-icons\";\nimport SEO from \"@/components/SEO\";\nimport { SEO_STRINGS } from \"@/constants/strings/seo\";\nimport CellRendererDemo from \"@/components/demos/CellRendererDemo\";\nimport CodeBlock from \"@/components/CodeBlock\";\nimport { useDemoCode } from \"@/hooks/useDemoCode\";\nimport DocNavigationButtons from \"@/components/DocNavigationButtons\";\n\nconst CellRendererPage = () => {\n  const demoCode = useDemoCode(\"CellRendererDemo.txt\");\n\n  return (\n    <>\n      <SEO\n        title={`Cell Renderer - ${SEO_STRINGS.docs.title}`}\n        description=\"Learn how to use custom cell renderers in Simple Table to display rich, interactive content.\"\n        keywords={`cell renderer, custom rendering, cell templates, ${SEO_STRINGS.docs.keywords}`}\n        canonicalUrl=\"/docs/cell-renderer\"\n      />\n\n      <motion.div\n        className=\"flex items-center gap-3 mb-6\"\n        initial={{ opacity: 0, x: -20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"p-2 bg-blue-100 rounded-lg\">\n          <FontAwesomeIcon icon={faCode} className=\"text-blue-600 text-2xl\" />\n        </div>\n        <h1 className=\"text-3xl font-bold text-gray-800\">Cell Renderer</h1>\n      </motion.div>\n\n      {/* Demo Section */}\n      <motion.div\n        className=\"mb-8\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.1 }}\n      >\n        <CellRendererDemo />\n      </motion.div>\n\n      <motion.p\n        className=\"text-gray-700 mb-6 text-lg\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n      >\n        Cell renderers give you complete control over how data is displayed in your table cells.\n        Using custom renderers, you can create rich, interactive elements like buttons, badges,\n        progress bars, and more.\n      </motion.p>\n\n      {/* Basic Usage Section */}\n      <motion.h2\n        className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2 pb-2 border-b border-gray-200\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.3 }}\n      >\n        Basic Usage\n      </motion.h2>\n\n      <motion.div\n        className=\"mb-8\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.4 }}\n      >\n        <p className=\"text-gray-700 mb-4\">\n          Each column in your table can have its own{\" \"}\n          <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">cellRenderer</code>{\" \"}\n          function. This function receives information about the cell and returns either a ReactNode\n          or a string to be rendered in the cell.\n        </p>\n\n        <CodeBlock code={demoCode} />\n\n        <div className=\"bg-blue-50 border-l-4 border-blue-400 p-4 rounded-lg shadow-sm mb-6\">\n          <h3 className=\"font-bold text-gray-800 mb-2\">cellRenderer Parameters</h3>\n          <p className=\"text-gray-700 mb-2\">\n            Each cellRenderer function receives an object with these properties:\n          </p>\n          <ul className=\"list-disc pl-5 mt-2 space-y-1 text-gray-700\">\n            <li>\n              <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">accessor</code>: The\n              column accessor string\n            </li>\n            <li>\n              <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">colIndex</code>: The\n              column index\n            </li>\n            <li>\n              <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">row</code>: The row\n              object containing the data\n            </li>\n          </ul>\n        </div>\n      </motion.div>\n\n      {/* Row Object Structure */}\n      <motion.h2\n        className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2 pb-2 border-b border-gray-200\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.5 }}\n      >\n        Row Object Structure\n      </motion.h2>\n\n      <motion.div\n        className=\"mb-8\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.6 }}\n      >\n        <p className=\"text-gray-700 mb-4\">\n          The <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">row</code> parameter\n          passed to your cell renderer has the following structure:\n        </p>\n\n        <div className=\"bg-gray-800 text-white p-4 rounded-md mb-6 overflow-x-auto shadow-[inset_0_2px_4px_rgba(0,0,0,0.3)]\">\n          <pre className=\"whitespace-pre-wrap\">\n            <code>{`type Row = {\n  // Row metadata\n  rowMeta: {\n    children?: Row[];    // Child rows for hierarchical data\n    isExpanded?: boolean; // Whether this row is expanded (for hierarchical data)\n    rowId: number;       // Unique identifier for the row\n  };\n\n  // Actual cell values\n  rowData: { [key: string]: CellValue };  // Map of accessors to cell values\n};`}</code>\n          </pre>\n        </div>\n\n        <p className=\"text-gray-700 mb-4\">\n          To access a specific cell value, use{\" \"}\n          <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">\n            row.rowData[accessor]\n          </code>\n          .\n        </p>\n      </motion.div>\n\n      {/* Return Types */}\n      <motion.h2\n        className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2 pb-2 border-b border-gray-200\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.7 }}\n      >\n        Return Types\n      </motion.h2>\n\n      <motion.div\n        className=\"mb-8\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.8 }}\n      >\n        <p className=\"text-gray-700 mb-4\">\n          Your <code className=\"bg-gray-200 px-1 py-0.5 rounded text-gray-800\">cellRenderer</code>{\" \"}\n          function should return one of the following:\n        </p>\n\n        <ul className=\"list-disc pl-5 mt-2 space-y-3 text-gray-700 mb-6\">\n          <li>\n            <strong>String</strong>: A simple text value to display in the cell\n            <div className=\"bg-gray-100 p-2 rounded mt-1\">\n              <code className=\"text-gray-800\">return \"Hello, world!\";</code>\n            </div>\n          </li>\n          <li>\n            <strong>ReactNode</strong>: A React component for custom rendering\n            <div className=\"bg-gray-100 p-2 rounded mt-1\">\n              <code className=\"text-gray-800\">\n                return &lt;div className=\"flex items-center\"&gt;&lt;span\n                className=\"mr-2\"&gt;⭐&lt;/span&gt; Custom Content&lt;/div&gt;;\n              </code>\n            </div>\n          </li>\n        </ul>\n\n        <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4 rounded-lg shadow-sm mb-6\">\n          <h3 className=\"font-bold text-gray-800 mb-2\">Important Notes</h3>\n          <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n            <li>Each column can have its own unique renderer</li>\n            <li>Columns without a cellRenderer will display their values as plain text</li>\n            <li>Avoid expensive operations in cell renderers as they run frequently</li>\n            <li>Consider memoizing complex components to improve performance</li>\n          </ul>\n        </div>\n      </motion.div>\n\n      <DocNavigationButtons />\n    </>\n  );\n};\n\nexport default CellRendererPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}