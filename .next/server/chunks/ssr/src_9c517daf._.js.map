{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/utils/analyticsConfig.ts"],"sourcesContent":["/**\n * Utility to conditionally enable/disable analytics services based on environment\n */\n\n// TypeScript declaration for Hotjar\ndeclare global {\n  interface Window {\n    hj?: Function;\n    _hjSettings?: {\n      hjid: number;\n      hjsv: number;\n    };\n  }\n}\n\n// Check if we're in development mode\nconst isDevelopment = () => {\n  if (typeof window === \"undefined\") {\n    return process.env.NODE_ENV === \"development\";\n  }\n  return (\n    window.location.hostname === \"localhost\" ||\n    window.location.hostname === \"127.0.0.1\" ||\n    window.location.hostname.includes(\"local\")\n  );\n};\n\n// Export a flag to control analytics\nexport const ANALYTICS_ENABLED = !isDevelopment();\n\n// Function to disable Hotjar in development\nexport const disableHotjarInDevelopment = () => {\n  if (typeof window === \"undefined\") return;\n\n  if (isDevelopment() && window.hj) {\n    // Overwrite the hj function to do nothing\n    window.hj = function () {\n      // No-op function\n      return;\n    };\n\n    // Clean up any Hotjar scripts that might have been added\n    const hjScripts = document.querySelectorAll('script[src*=\"hotjar\"]');\n    hjScripts.forEach((script) => script.remove());\n  }\n};\n\n// Function to disable Simple Analytics in development\nexport const disableSimpleAnalyticsInDevelopment = () => {\n  if (typeof window === \"undefined\") return;\n\n  if (isDevelopment()) {\n    // Remove Simple Analytics script\n    const saScripts = document.querySelectorAll('script[src*=\"simpleanalyticscdn\"]');\n    saScripts.forEach((script) => script.remove());\n\n    // Remove Simple Analytics noscript image\n    const saImages = document.querySelectorAll('img[src*=\"simpleanalyticscdn\"]');\n    saImages.forEach((img) => img.remove());\n  }\n};\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,oCAAoC;;;;;;AAWpC,qCAAqC;AACrC,MAAM,gBAAgB;IACpB,wCAAmC;QACjC,OAAO,oDAAyB;IAClC;;AAMF;AAGO,MAAM,oBAAoB,CAAC;AAG3B,MAAM,6BAA6B;IACxC,wCAAmC;;AAarC;AAGO,MAAM,sCAAsC;IACjD,wCAAmC;;AAWrC","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/utils/analytics.ts"],"sourcesContent":["import ReactGA from \"react-ga4\";\nimport { ANALYTICS_ENABLED } from \"./analyticsConfig\";\n\nexport const trackEvent = (category: string, action: string, label?: string) => {\n  if (!ANALYTICS_ENABLED) return;\n\n  ReactGA.event({\n    category,\n    action,\n    label,\n  });\n};\n\nexport const trackPageView = (path: string) => {\n  if (!ANALYTICS_ENABLED) return;\n\n  ReactGA.send({ hitType: \"pageview\", page: path });\n};\n\nexport const trackLinkClick = (linkName: string, linkUrl: string) => {\n  trackEvent(\"Link Click\", linkName, linkUrl);\n};\n\nexport const trackButtonClick = (buttonName: string, buttonLocation: string) => {\n  trackEvent(\"Button Click\", buttonName, buttonLocation);\n};\n\nexport const trackThemeChange = (themeName: string) => {\n  trackEvent(\"Theme\", \"Change\", themeName);\n};\n\nexport const trackDownload = (fileName: string) => {\n  trackEvent(\"Download\", \"File\", fileName);\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAEO,MAAM,aAAa,CAAC,UAAkB,QAAgB;IAC3D,IAAI,CAAC,+HAAA,CAAA,oBAAiB,EAAE;IAExB,6IAAA,CAAA,UAAO,CAAC,KAAK,CAAC;QACZ;QACA;QACA;IACF;AACF;AAEO,MAAM,gBAAgB,CAAC;IAC5B,IAAI,CAAC,+HAAA,CAAA,oBAAiB,EAAE;IAExB,6IAAA,CAAA,UAAO,CAAC,IAAI,CAAC;QAAE,SAAS;QAAY,MAAM;IAAK;AACjD;AAEO,MAAM,iBAAiB,CAAC,UAAkB;IAC/C,WAAW,cAAc,UAAU;AACrC;AAEO,MAAM,mBAAmB,CAAC,YAAoB;IACnD,WAAW,gBAAgB,YAAY;AACzC;AAEO,MAAM,mBAAmB,CAAC;IAC/B,WAAW,SAAS,UAAU;AAChC;AAEO,MAAM,gBAAgB,CAAC;IAC5B,WAAW,YAAY,QAAQ;AACjC","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/AnimatedBackground.tsx"],"sourcesContent":["import { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\n\n// Background bubble component with more visible styling\nconst BackgroundBubble = ({\n  size,\n  x,\n  y,\n  delay,\n  opacity = 0.3,\n  color = \"bg-blue-500/30\",\n}: {\n  size: number;\n  x: number;\n  y: number;\n  delay: number;\n  opacity?: number;\n  color?: string;\n}) => (\n  <motion.div\n    className={`absolute rounded-full ${color}`}\n    style={{\n      width: size,\n      height: size,\n      left: `${x}%`,\n      top: `${y}%`,\n      zIndex: -1,\n    }}\n    initial={{ scale: 0.6, opacity: 0 }}\n    animate={{ scale: 1, opacity }}\n    transition={{\n      duration: 5 + Math.random() * 7,\n      delay,\n      repeat: Infinity,\n      repeatType: \"reverse\",\n    }}\n  />\n);\n\nconst AnimatedBackground = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n\n  // Generate bubbles across the viewport with varied colors and improved visibility\n  const bubbles = [\n    { size: 300, x: 5, y: 10, delay: 0, opacity: 0.25, color: \"bg-blue-500/35\" },\n    { size: 200, x: 80, y: 15, delay: 0.3, opacity: 0.22, color: \"bg-indigo-500/30\" },\n    { size: 250, x: 20, y: 60, delay: 0.5, opacity: 0.28, color: \"bg-blue-400/35\" },\n    { size: 180, x: 70, y: 70, delay: 0.7, opacity: 0.25, color: \"bg-sky-500/35\" },\n    { size: 350, x: 40, y: 30, delay: 1.0, opacity: 0.2, color: \"bg-blue-600/30\" },\n    { size: 420, x: 85, y: 90, delay: 1.3, opacity: 0.18, color: \"bg-indigo-400/30\" },\n    { size: 280, x: 10, y: 95, delay: 1.5, opacity: 0.25, color: \"bg-blue-500/35\" },\n    { size: 360, x: 60, y: 40, delay: 1.8, opacity: 0.2, color: \"bg-sky-400/30\" },\n    // Add a few more prominent bubbles\n    { size: 200, x: 30, y: 20, delay: 2.0, opacity: 0.3, color: \"bg-blue-500/40\" },\n    { size: 230, x: 75, y: 50, delay: 0.8, opacity: 0.32, color: \"bg-indigo-500/40\" },\n    { size: 190, x: 15, y: 45, delay: 1.2, opacity: 0.35, color: \"bg-sky-400/45\" },\n    { size: 320, x: 88, y: 25, delay: 0.4, opacity: 0.3, color: \"bg-blue-400/40\" },\n  ];\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none min-h-[200vh]\">\n      {isLoaded && (\n        <>\n          {bubbles.map((bubble, index) => (\n            <BackgroundBubble\n              key={index}\n              size={bubble.size}\n              x={bubble.x}\n              y={bubble.y}\n              delay={bubble.delay}\n              opacity={bubble.opacity}\n              color={bubble.color}\n            />\n          ))}\n\n          {/* Subtle grid pattern */}\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-[0.08]\"></div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedBackground;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,wDAAwD;AACxD,MAAM,mBAAmB,CAAC,EACxB,IAAI,EACJ,CAAC,EACD,CAAC,EACD,KAAK,EACL,UAAU,GAAG,EACb,QAAQ,gBAAgB,EAQzB,iBACC,8OAAC,wJAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAW,CAAC,sBAAsB,EAAE,OAAO;QAC3C,OAAO;YACL,OAAO;YACP,QAAQ;YACR,MAAM,GAAG,EAAE,CAAC,CAAC;YACb,KAAK,GAAG,EAAE,CAAC,CAAC;YACZ,QAAQ,CAAC;QACX;QACA,SAAS;YAAE,OAAO;YAAK,SAAS;QAAE;QAClC,SAAS;YAAE,OAAO;YAAG;QAAQ;QAC7B,YAAY;YACV,UAAU,IAAI,KAAK,MAAM,KAAK;YAC9B;YACA,QAAQ;YACR,YAAY;QACd;;;;;;AAIJ,MAAM,qBAAqB;IACzB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY;IACd,GAAG,EAAE;IAEL,kFAAkF;IAClF,MAAM,UAAU;QACd;YAAE,MAAM;YAAK,GAAG;YAAG,GAAG;YAAI,OAAO;YAAG,SAAS;YAAM,OAAO;QAAiB;QAC3E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAmB;QAChF;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAiB;QAC9E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAgB;QAC7E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAK,OAAO;QAAiB;QAC7E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAmB;QAChF;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAiB;QAC9E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAK,OAAO;QAAgB;QAC5E,mCAAmC;QACnC;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAK,OAAO;QAAiB;QAC7E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAmB;QAChF;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAM,OAAO;QAAgB;QAC7E;YAAE,MAAM;YAAK,GAAG;YAAI,GAAG;YAAI,OAAO;YAAK,SAAS;YAAK,OAAO;QAAiB;KAC9E;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,0BACC;;gBACG,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;wBAEC,MAAM,OAAO,IAAI;wBACjB,GAAG,OAAO,CAAC;wBACX,GAAG,OAAO,CAAC;wBACX,OAAO,OAAO,KAAK;wBACnB,SAAS,OAAO,OAAO;wBACvB,OAAO,OAAO,KAAK;uBANd;;;;;8BAWT,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;AAKzB;uCAEe","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/PageLayout.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { motion } from \"framer-motion\";\nimport AnimatedBackground from \"./AnimatedBackground\";\n\ninterface PageLayoutProps {\n  containerWidth?: string;\n  sidebar: ReactNode;\n  children: ReactNode;\n}\n\nconst PageLayout: React.FC<PageLayoutProps> = ({\n  containerWidth = \"w-full sm:max-w-xl md:max-w-2xl lg:max-w-4xl\",\n  sidebar,\n  children,\n}) => {\n  return (\n    <>\n      <AnimatedBackground />\n\n      <div className=\"relative z-10 mx-auto max-w-7xl\">\n        <div className=\"flex flex-col md:flex-row justify-center gap-4 md:gap-6 px-4 sm:px-6 md:px-8\">\n          {sidebar}\n\n          <div className={`flex flex-col flex-1 mx-auto mt-6 ${containerWidth}`}>\n            <motion.div\n              className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-[0_4px_16px_rgba(0,0,0,0.1)] p-4 sm:p-6 md:p-8 mb-8 min-h-[calc(100dvh-84px-1.5rem)]\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              {children}\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PageLayout;\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAQA,MAAM,aAAwC,CAAC,EAC7C,iBAAiB,8CAA8C,EAC/D,OAAO,EACP,QAAQ,EACT;IACC,qBACE;;0BACE,8OAAC,wIAAA,CAAA,UAAkB;;;;;0BAEnB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;wBACZ;sCAED,8OAAC;4BAAI,WAAW,CAAC,kCAAkC,EAAE,gBAAgB;sCACnE,cAAA,8OAAC,wJAAA,CAAA,SAAM,CAAC,GAAG;gCACT,WAAU;gCACV,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAG;gCAC7B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,UAAU;gCAAI;0CAE3B;;;;;;;;;;;;;;;;;;;;;;;;AAOf;uCAEe","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/hooks/useIsMobile.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useIsMobile = (breakpoint: number = 768): boolean => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const checkViewportSize = () => {\n      setIsMobile(window.innerWidth < breakpoint);\n    };\n\n    // Initial check\n    checkViewportSize();\n\n    // Add event listener for window resize\n    window.addEventListener(\"resize\", checkViewportSize);\n\n    // Clean up event listener\n    return () => window.removeEventListener(\"resize\", checkViewportSize);\n  }, [breakpoint]);\n\n  return isMobile;\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,CAAC,aAAqB,GAAG;IAClD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,oBAAoB;YACxB,YAAY,OAAO,UAAU,GAAG;QAClC;QAEA,gBAAgB;QAChB;QAEA,uCAAuC;QACvC,OAAO,gBAAgB,CAAC,UAAU;QAElC,0BAA0B;QAC1B,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG;QAAC;KAAW;IAEf,OAAO;AACT","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/finance/finance-rows.ts"],"sourcesContent":["import { Row } from \"simple-table-core\";\n\n// Define known companies by sector\nconst COMPANIES_BY_SECTOR = {\n  Technology: [\n    { ticker: \"AAPL\", name: \"Apple Inc.\", price: 182.52, marketCap: 2852.4 },\n    { ticker: \"MSFT\", name: \"Microsoft Corporation\", price: 338.14, marketCap: 2512.9 },\n    { ticker: \"GOOGL\", name: \"Alphabet Inc.\", price: 142.65, marketCap: 1789.3 },\n    { ticker: \"AMZN\", name: \"Amazon.com Inc.\", price: 175.35, marketCap: 1811.2 },\n    { ticker: \"META\", name: \"Meta Platforms Inc.\", price: 478.22, marketCap: 1214.6 },\n    { ticker: \"TSLA\", name: \"Tesla Inc.\", price: 177.58, marketCap: 567.2 },\n    { ticker: \"NVDA\", name: \"NVIDIA Corporation\", price: 110.55, marketCap: 2724.1 },\n    { ticker: \"NFLX\", name: \"Netflix Inc.\", price: 628.55, marketCap: 272.3 },\n  ],\n  Healthcare: [\n    { ticker: \"JNJ\", name: \"Johnson & Johnson\", price: 147.52, marketCap: 355.3 },\n    { ticker: \"PFE\", name: \"Pfizer Inc.\", price: 26.95, marketCap: 152.9 },\n    { ticker: \"UNH\", name: \"UnitedHealth Group Inc.\", price: 527.24, marketCap: 487.5 },\n    { ticker: \"MRK\", name: \"Merck & Co Inc.\", price: 105.11, marketCap: 265.8 },\n    { ticker: \"ABT\", name: \"Abbott Laboratories\", price: 107.57, marketCap: 187.1 },\n  ],\n  Financial: [\n    { ticker: \"JPM\", name: \"JPMorgan Chase & Co.\", price: 182.06, marketCap: 522.7 },\n    { ticker: \"BAC\", name: \"Bank of America Corp.\", price: 38.34, marketCap: 301.2 },\n    { ticker: \"WFC\", name: \"Wells Fargo & Co.\", price: 56.94, marketCap: 204.1 },\n    { ticker: \"V\", name: \"Visa Inc.\", price: 275.96, marketCap: 583.2 },\n    { ticker: \"MA\", name: \"Mastercard Inc.\", price: 445.58, marketCap: 416.8 },\n  ],\n  Consumer: [\n    { ticker: \"PG\", name: \"Procter & Gamble Co.\", price: 169.85, marketCap: 400.2 },\n    { ticker: \"KO\", name: \"Coca-Cola Co.\", price: 62.17, marketCap: 268.6 },\n    { ticker: \"PEP\", name: \"PepsiCo Inc.\", price: 169.55, marketCap: 233.2 },\n    { ticker: \"WMT\", name: \"Walmart Inc.\", price: 59.68, marketCap: 481.4 },\n    { ticker: \"MCD\", name: \"McDonald's Corp.\", price: 257.75, marketCap: 186.9 },\n  ],\n  Energy: [\n    { ticker: \"XOM\", name: \"Exxon Mobil Corp.\", price: 113.9, marketCap: 453.2 },\n    { ticker: \"CVX\", name: \"Chevron Corp.\", price: 145.29, marketCap: 271.4 },\n    { ticker: \"COP\", name: \"ConocoPhillips\", price: 108.14, marketCap: 126.5 },\n    { ticker: \"SLB\", name: \"Schlumberger NV\", price: 43.44, marketCap: 62.1 },\n  ],\n  Industrial: [\n    { ticker: \"GE\", name: \"General Electric Co.\", price: 159.91, marketCap: 174.5 },\n    { ticker: \"BA\", name: \"Boeing Co.\", price: 181.5, marketCap: 110.9 },\n    { ticker: \"HON\", name: \"Honeywell International Inc.\", price: 201.58, marketCap: 131.7 },\n    { ticker: \"CAT\", name: \"Caterpillar Inc.\", price: 345.54, marketCap: 168.9 },\n    { ticker: \"UPS\", name: \"United Parcel Service Inc.\", price: 134.85, marketCap: 115.3 },\n  ],\n  Telecom: [\n    { ticker: \"VZ\", name: \"Verizon Communications Inc.\", price: 40.81, marketCap: 171.9 },\n    { ticker: \"T\", name: \"AT&T Inc.\", price: 17.16, marketCap: 123.0 },\n    { ticker: \"CMCSA\", name: \"Comcast Corp.\", price: 40.01, marketCap: 158.1 },\n  ],\n};\n\n// Generate realistic finance data with known companies\nexport const generateFinanceData = (): Row[] => {\n  const sectors = Object.keys(COMPANIES_BY_SECTOR);\n  let rowId = 0;\n\n  return sectors.map((sector) => {\n    const companies = COMPANIES_BY_SECTOR[sector as keyof typeof COMPANIES_BY_SECTOR];\n\n    const children = companies.map((company) => {\n      // Use realistic company data as a base\n      const price = company.price * (0.9 + Math.random() * 0.2); // +/- 10% from base price\n      const marketCap = company.marketCap;\n      const peRatio = parseFloat((Math.random() * 40 + 5).toFixed(1));\n      const dividendYield = parseFloat((Math.random() * 5).toFixed(2));\n      const revenueGrowth = parseFloat((Math.random() * 40 - 10).toFixed(1));\n      const profitMargin = parseFloat((Math.random() * 30).toFixed(1));\n      const riskFactor = Math.floor(Math.random() * 10) + 1;\n      const esgScore = Math.floor(Math.random() * 80) + 20;\n      const analystRating = parseFloat((Math.random() * 3 + 2).toFixed(1)); // 2.0-5.0 range for ratings\n\n      // Calculate a price change with more realistic distribution\n      let priceChangePercent;\n      const rand = Math.random();\n      if (rand < 0.05) {\n        // Rare big drops\n        priceChangePercent = parseFloat((Math.random() * -15 - 5).toFixed(2));\n      } else if (rand < 0.3) {\n        // Common small drops\n        priceChangePercent = parseFloat((Math.random() * -5).toFixed(2));\n      } else if (rand < 0.7) {\n        // Common small gains\n        priceChangePercent = parseFloat((Math.random() * 5).toFixed(2));\n      } else if (rand < 0.95) {\n        // Common large gains\n        priceChangePercent = parseFloat((Math.random() * 10).toFixed(2));\n      } else {\n        // Rare big gains\n        priceChangePercent = parseFloat((Math.random() * 15 + 10).toFixed(2));\n      }\n\n      return {\n        rowMeta: { rowId: rowId++, isExpanded: true },\n        rowData: {\n          sectorName: sector,\n          ticker: company.ticker,\n          companyName: company.name,\n          price,\n          priceChangePercent,\n          marketCap,\n          peRatio,\n          dividendYield,\n          revenueGrowth,\n          profitMargin,\n          riskFactor,\n          esgScore,\n          analystRating,\n        },\n      };\n    });\n\n    // Calculate sector totals and averages\n    const avgPriceChange = parseFloat(\n      (\n        children.reduce((sum, child) => sum + (child.rowData.priceChangePercent as number), 0) / children.length\n      ).toFixed(2)\n    );\n    const avgPERatio = parseFloat(\n      (children.reduce((sum, child) => sum + (child.rowData.peRatio as number), 0) / children.length).toFixed(1)\n    );\n    const avgDividendYield = parseFloat(\n      (children.reduce((sum, child) => sum + (child.rowData.dividendYield as number), 0) / children.length).toFixed(2)\n    );\n    const totalMarketCap = parseFloat(\n      children.reduce((sum, child) => sum + (child.rowData.marketCap as number), 0).toFixed(1)\n    );\n    const avgESGScore = Math.round(\n      children.reduce((sum, child) => sum + (child.rowData.esgScore as number), 0) / children.length\n    );\n\n    return {\n      rowMeta: { rowId: rowId++, isExpanded: true, children },\n      rowData: {\n        sectorName: sector,\n        ticker: \"—\",\n        companyName: `${sector} Sector (${children.length})`,\n        price: \"—\",\n        priceChangePercent: avgPriceChange,\n        marketCap: totalMarketCap,\n        peRatio: avgPERatio,\n        dividendYield: avgDividendYield,\n        revenueGrowth: \"—\",\n        profitMargin: \"—\",\n        riskFactor: \"—\",\n        esgScore: avgESGScore,\n        analystRating: \"—\",\n      },\n    };\n  });\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/finance/finance-headers.tsx"],"sourcesContent":["import { HeaderObject } from \"simple-table-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faThumbsUp,\n  faThumbsDown,\n  faArrowUp,\n  faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Tag, Tooltip } from \"antd\";\n\nexport const HEADERS: HeaderObject[] = [\n  {\n    accessor: \"ticker\",\n    label: \"Symbol\",\n    width: 100,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    pinned: \"left\",\n    type: \"string\",\n  },\n  {\n    accessor: \"companyInfo\",\n    label: \"Company Information\",\n    width: 380,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"sectorName\",\n        label: \"Sector\",\n        width: 180,\n        expandable: true,\n        isSortable: true,\n        isEditable: false,\n        align: \"left\",\n        type: \"string\",\n      },\n      {\n        accessor: \"companyName\",\n        label: \"Name\",\n        width: 200,\n        isSortable: true,\n        isEditable: false,\n        align: \"left\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    accessor: \"priceMetrics\",\n    label: \"Price Performance\",\n    width: 250,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"price\",\n        label: \"Price (USD)\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.price === \"—\") return \"—\";\n          return `$${(row.rowData.price as number).toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}`;\n        },\n      },\n      {\n        accessor: \"priceChangePercent\",\n        label: \"Change %\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.priceChangePercent === \"—\") return \"—\";\n          const value = row.rowData.priceChangePercent as number;\n          const color = value < 0 ? \"text-red-600\" : value > 0 ? \"text-green-600\" : \"text-gray-600\";\n          const prefix = value > 0 ? \"+\" : \"\";\n          const bgColor = value < 0 ? \"bg-red-50\" : value > 0 ? \"bg-green-50\" : \"\";\n\n          return (\n            <div className={`px-2 py-1 rounded font-medium ${bgColor} ${color}`}>\n              {prefix}\n              {value.toFixed(2)}%\n            </div>\n          );\n        },\n      },\n    ],\n  },\n  {\n    accessor: \"fundamentals\",\n    label: \"Fundamentals\",\n    width: 380,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"marketCap\",\n        label: \"Mkt Cap ($B)\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.marketCap === \"—\") return \"—\";\n          return (row.rowData.marketCap as number).toLocaleString(\"en-US\", {\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1,\n          });\n        },\n      },\n      {\n        accessor: \"peRatio\",\n        label: \"P/E Ratio\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.peRatio === \"—\") return \"—\";\n          return (row.rowData.peRatio as number).toFixed(1);\n        },\n      },\n      {\n        accessor: \"dividendYield\",\n        label: \"Div Yield\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.dividendYield === \"—\") return \"—\";\n          return `${(row.rowData.dividendYield as number).toFixed(2)}%`;\n        },\n      },\n    ],\n  },\n  {\n    accessor: \"growth\",\n    label: \"Growth & Profitability\",\n    width: 260,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"revenueGrowth\",\n        label: \"Rev Growth\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.revenueGrowth === \"—\") return \"—\";\n          const value = row.rowData.revenueGrowth as number;\n          const color = value < 0 ? \"text-red-600\" : value > 0 ? \"text-green-600\" : \"text-gray-600\";\n          const prefix = value > 0 ? \"+\" : \"\";\n          return (\n            <span className={color}>\n              {prefix}\n              {value}%\n            </span>\n          );\n        },\n      },\n      {\n        accessor: \"profitMargin\",\n        label: \"Profit Margin\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.profitMargin === \"—\") return \"—\";\n          return `${row.rowData.profitMargin}%`;\n        },\n      },\n    ],\n  },\n  {\n    accessor: \"ratings\",\n    label: \"Ratings & Scores\",\n    width: 270,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"analystRating\",\n        label: \"Analyst Rating\",\n        width: 150,\n        isSortable: true,\n        isEditable: false,\n        align: \"center\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.analystRating === \"—\") return \"—\";\n          const value = row.rowData.analystRating as number;\n\n          // Text ratings\n          const ratingLabels = {\n            5: \"Strong Buy\",\n            4.5: \"Buy+\",\n            4: \"Buy\",\n            3.5: \"Overweight\",\n            3: \"Hold\",\n            2.5: \"Underweight\",\n            2: \"Sell\",\n            1.5: \"Sell+\",\n            1: \"Strong Sell\",\n          };\n\n          // Color based on rating\n          const getRatingColor = (val: number) => {\n            if (val >= 4.5) return \"green\";\n            if (val >= 4) return \"green\";\n            if (val >= 3.5) return \"cyan\";\n            if (val >= 3) return \"blue\";\n            if (val >= 2.5) return \"orange\";\n            if (val >= 2) return \"volcano\";\n            return \"red\";\n          };\n\n          const ratingLabel =\n            ratingLabels[(Math.round(value * 2) / 2) as keyof typeof ratingLabels] || \"Hold\";\n          const color = getRatingColor(value);\n\n          const icon = value >= 4 ? faThumbsUp : value < 3 ? faThumbsDown : null;\n          const direction = value >= 4 ? faArrowUp : value < 3 ? faArrowDown : null;\n\n          return (\n            <Tooltip title={`${value.toFixed(1)} / 5.0`}>\n              <Tag color={color} className=\"py-1 px-2\">\n                {icon && <FontAwesomeIcon icon={icon} className=\"mr-1\" />}\n                {ratingLabel}\n                {direction && <FontAwesomeIcon icon={direction} className=\"ml-1\" size=\"xs\" />}\n              </Tag>\n            </Tooltip>\n          );\n        },\n      },\n      {\n        accessor: \"esgScore\",\n        label: \"ESG Score\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.esgScore === \"—\") return \"—\";\n          const value = row.rowData.esgScore as number;\n          // Color based on score\n          const getColorClass = () => {\n            if (value >= 80) return \"text-green-600\";\n            if (value >= 60) return \"text-green-500\";\n            if (value >= 40) return \"text-orange-500\";\n            return \"text-red-500\";\n          };\n\n          return <span className={getColorClass()}>{value}</span>;\n        },\n      },\n    ],\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/finance/FinancialDashboard.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { SimpleTable } from \"simple-table-core\";\nimport { generateFinanceData } from \"./finance-rows\";\nimport { HEADERS } from \"./finance-headers\";\nimport \"simple-table-core/styles.css\";\n\nconst FinancialDashboard = ({ height = \"70dvh\" }: { height?: string }) => {\n  const [data] = useState(generateFinanceData());\n\n  return (\n    <SimpleTable\n      columnResizing\n      columnReordering\n      defaultHeaders={HEADERS}\n      rows={data}\n      height={height}\n      theme=\"light\"\n      selectableCells\n      selectableColumns\n    />\n  );\n};\n\nexport default FinancialDashboard;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAGA,MAAM,qBAAqB,CAAC,EAAE,SAAS,OAAO,EAAuB;IACnE,MAAM,CAAC,KAAK,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,2JAAA,CAAA,sBAAmB,AAAD;IAE1C,qBACE,8OAAC,8JAAA,CAAA,cAAW;QACV,cAAc;QACd,gBAAgB;QAChB,gBAAgB,+JAAA,CAAA,UAAO;QACvB,MAAM;QACN,QAAQ;QACR,OAAM;QACN,eAAe;QACf,iBAAiB;;;;;;AAGvB;uCAEe","debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/manufacturing/manufacturing-rows.ts"],"sourcesContent":["import { Row } from \"simple-table-core\";\n\n// Generate manufacturing data\nexport const generateManufacturingData = (): Row[] => {\n  const productLines = [\"Assembly Line A\", \"Assembly Line B\", \"Electronics\", \"Packaging\", \"Quality Control\", \"Tooling\"];\n  const productTypes = [\"Component X\", \"Widget Y\", \"Module Z\", \"Part Alpha\", \"Unit Beta\", \"System Gamma\"];\n  const machines = [\"Robot Arm\", \"CNC Machine\", \"Injection Molder\", \"Circuit Printer\", \"Quality Scanner\", \"Packaging\"];\n  const operators = [\"Team Alpha\", \"Team Beta\", \"Team Gamma\", \"Team Delta\", \"Team Epsilon\", \"Team Zeta\"];\n\n  let rowId = 0;\n  const rows: Row[] = [];\n\n  // Generate data for each product line\n  productLines.forEach((productLine, lineIndex) => {\n    // Number of machines/workstations per product line\n    const numStations = Math.floor(Math.random() * 6) + 3; // 3 to 8 stations per line\n\n    const children: Row[] = [];\n    let totalOutput = 0;\n    let totalDefects = 0;\n    let totalDowntime = 0;\n    let totalEfficiency = 0;\n\n    // Generate station data\n    for (let i = 0; i < numStations; i++) {\n      const stationId = `${productLine.charAt(0)}${lineIndex + 1}-S${i + 1}`;\n      const machineType = machines[Math.floor(Math.random() * machines.length)];\n      const operator = operators[Math.floor(Math.random() * operators.length)];\n      const productType = productTypes[Math.floor(Math.random() * productTypes.length)];\n\n      // Calculate metrics\n      const outputRate = Math.floor(Math.random() * 500) + 200; // 200-700 units per shift\n      const cycleTimes = Array.from({ length: 10 }, () => Math.random() * 100 + 50);\n      const avgCycleTime = cycleTimes.reduce((sum, time) => sum + time, 0) / cycleTimes.length;\n      const efficiency = Math.floor(Math.random() * 40) + 60; // 60-100%\n      const defectRate = Math.random() * 5; // 0-5%\n      const defectCount = Math.floor(outputRate * (defectRate / 100));\n      const downtimeHours = Math.random() * 4; // 0-4 hours\n      const utilizationRate = Math.floor(Math.random() * 30) + 70; // 70-100%\n      const energyConsumption = Math.floor(Math.random() * 1000) + 500; // 500-1500 kWh\n      const maintenanceDate = new Date();\n      maintenanceDate.setDate(maintenanceDate.getDate() + Math.floor(Math.random() * 30));\n\n      // Random status weighted toward \"Running\"\n      const statusRandom = Math.random();\n      const status =\n        statusRandom < 0.7\n          ? \"Running\"\n          : statusRandom < 0.8\n          ? \"Scheduled Maintenance\"\n          : statusRandom < 0.9\n          ? \"Unplanned Downtime\"\n          : statusRandom < 0.95\n          ? \"Idle\"\n          : \"Setup\";\n\n      children.push({\n        rowMeta: { rowId: rowId++, isExpanded: true },\n        rowData: {\n          id: stationId,\n          productLine,\n          station: `Station ${i + 1}`,\n          machineType,\n          operator,\n          productType,\n          outputRate,\n          cycletime: avgCycleTime.toFixed(2),\n          efficiency,\n          defectRate: defectRate.toFixed(2),\n          defectCount,\n          downtime: downtimeHours.toFixed(2),\n          utilization: utilizationRate,\n          energy: energyConsumption,\n          status,\n          maintenanceDate: maintenanceDate.toISOString().split(\"T\")[0],\n          cycleTimeData: JSON.stringify(cycleTimes),\n        },\n      });\n\n      // Accumulate totals for product line summary\n      totalOutput += outputRate;\n      totalDefects += defectCount;\n      totalDowntime += downtimeHours;\n      totalEfficiency += efficiency;\n    }\n\n    // Create product line summary row\n    const avgEfficiency = Math.round(totalEfficiency / children.length);\n    const avgDefectRate = ((totalDefects / totalOutput) * 100).toFixed(2);\n\n    rows.push({\n      rowMeta: { rowId: rowId++, isExpanded: true, children },\n      rowData: {\n        id: `${productLine.charAt(0)}${lineIndex + 1}`,\n        productLine,\n        station: `${productLine} Summary`,\n        machineType: \"—\",\n        operator: \"—\",\n        productType: \"—\",\n        outputRate: totalOutput,\n        cycletime: \"—\",\n        efficiency: avgEfficiency,\n        defectRate: avgDefectRate,\n        defectCount: totalDefects,\n        downtime: totalDowntime.toFixed(2),\n        utilization: \"—\",\n        energy: children.reduce((sum, child) => sum + (child.rowData.energy as number), 0),\n        status: \"—\",\n        maintenanceDate: \"—\",\n        cycleTimeData: \"—\",\n      },\n    });\n  });\n\n  return rows;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/manufacturing/manufacturing-headers.tsx"],"sourcesContent":["import { HeaderObject } from \"simple-table-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faCog,\n  faExclamationTriangle,\n  faClock,\n  faTools,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Tag, Progress } from \"antd\";\n\nexport const HEADERS: HeaderObject[] = [\n  {\n    accessor: \"productLine\",\n    label: \"Production Line\",\n    width: 180,\n    expandable: true,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      const isLineRow = row.rowData.station?.toString().includes(\"Summary\") || false;\n      return isLineRow ? <span className=\"font-bold\">{row.rowData.productLine}</span> : row.rowData.productLine;\n    },\n  },\n  {\n    accessor: \"station\",\n    label: \"Workstation\",\n    width: 150,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      const isLineRow = row.rowData.station?.toString().includes(\"Summary\") || false;\n      if (isLineRow) {\n        return <span className=\"text-gray-500\">{row.rowData.id}</span>;\n      }\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span className=\"bg-blue-100 text-blue-700 text-xs font-medium px-1.5 py-0.5 rounded\">{row.rowData.id}</span>\n          <span>{row.rowData.station}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"machineType\",\n    label: \"Machine Type\",\n    width: 150,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"string\",\n  },\n  {\n    accessor: \"status\",\n    label: \"Status\",\n    width: 180,\n    isSortable: true,\n    isEditable: false,\n    align: \"center\",\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.status === \"—\") return \"—\";\n\n      const status = row.rowData.status as string;\n      const colorMap = {\n        Running: { color: \"green\", icon: faCheckCircle },\n        \"Scheduled Maintenance\": { color: \"blue\", icon: faCog },\n        \"Unplanned Downtime\": { color: \"red\", icon: faExclamationTriangle },\n        Idle: { color: \"orange\", icon: faClock },\n        Setup: { color: \"purple\", icon: faTools },\n      };\n\n      const statusInfo = colorMap[status as keyof typeof colorMap] || { color: \"default\", icon: faInfoCircle };\n\n      return (\n        <Tag color={statusInfo.color} className=\"px-2 py-1\">\n          <FontAwesomeIcon icon={statusInfo.icon} className=\"mr-1\" />\n          {status}\n        </Tag>\n      );\n    },\n  },\n  {\n    accessor: \"outputRate\",\n    label: \"Output (units/shift)\",\n    width: 160,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      const isLineRow = row.rowData.station?.toString().includes(\"Summary\") || false;\n      return <div className={isLineRow ? \"font-bold\" : \"\"}>{(row.rowData.outputRate as number).toLocaleString()}</div>;\n    },\n  },\n  {\n    accessor: \"cycletime\",\n    label: \"Cycle Time (s)\",\n    width: 140,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n  },\n  {\n    accessor: \"efficiency\",\n    label: \"Efficiency\",\n    width: 150,\n    isSortable: true,\n    isEditable: false,\n    align: \"center\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.efficiency === \"—\") return \"—\";\n\n      const efficiency = row.rowData.efficiency as number;\n      const getColorByEfficiency = (value: number): \"success\" | \"normal\" | \"exception\" => {\n        if (value >= 90) return \"success\";\n        if (value >= 75) return \"normal\";\n        return \"exception\";\n      };\n\n      return (\n        <div className=\"w-full flex flex-col\">\n          <Progress percent={efficiency} size=\"small\" showInfo={false} status={getColorByEfficiency(efficiency)} />\n          <div className=\"text-xs text-center mt-1\">{efficiency}%</div>\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"defectRate\",\n    label: \"Defect Rate\",\n    width: 120,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.defectRate === \"—\") return \"—\";\n      const rate = parseFloat(row.rowData.defectRate as string);\n      const color = rate < 1 ? \"text-green-600\" : rate < 3 ? \"text-orange-500\" : \"text-red-600\";\n\n      return <span className={color}>{rate}%</span>;\n    },\n  },\n  {\n    accessor: \"defectCount\",\n    label: \"Defects\",\n    width: 120,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n  },\n  {\n    accessor: \"downtime\",\n    label: \"Downtime (h)\",\n    width: 130,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.downtime === \"—\") return \"—\";\n\n      const hours = parseFloat(row.rowData.downtime as string);\n      const color = hours < 1 ? \"text-green-600\" : hours < 2 ? \"text-orange-500\" : \"text-red-600\";\n\n      return <span className={color}>{hours}</span>;\n    },\n  },\n  {\n    accessor: \"utilization\",\n    label: \"Utilization\",\n    width: 130,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.utilization === \"—\") return \"—\";\n      return `${row.rowData.utilization}%`;\n    },\n  },\n  {\n    accessor: \"energy\",\n    label: \"Energy (kWh)\",\n    width: 130,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      return (row.rowData.energy as number).toLocaleString();\n    },\n  },\n  {\n    accessor: \"maintenanceDate\",\n    label: \"Next Maintenance\",\n    width: 150,\n    isSortable: true,\n    isEditable: false,\n    align: \"center\",\n    type: \"date\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.maintenanceDate === \"—\") return \"—\";\n\n      const date = new Date(row.rowData.maintenanceDate as string);\n      const today = new Date();\n      const diffDays = Math.ceil((date.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));\n\n      let color = \"blue\";\n      if (diffDays <= 3) color = \"red\";\n      else if (diffDays <= 7) color = \"orange\";\n\n      return (\n        <Tag color={color}>\n          {date.toLocaleDateString()} ({diffDays} days)\n        </Tag>\n      );\n    },\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1519, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/manufacturing/ManufacturingMetrics.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { SimpleTable } from \"simple-table-core\";\nimport { generateManufacturingData } from \"./manufacturing-rows\";\nimport { HEADERS } from \"./manufacturing-headers\";\nimport \"simple-table-core/styles.css\";\n\nconst ManufacturingMetrics = () => {\n  const [data] = useState(generateManufacturingData());\n\n  return (\n    <SimpleTable\n      columnResizing\n      columnReordering\n      defaultHeaders={HEADERS}\n      rows={data}\n      height=\"60dvh\"\n      theme=\"light\"\n      selectableCells\n    />\n  );\n};\n\nexport default ManufacturingMetrics;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAGA,MAAM,uBAAuB;IAC3B,MAAM,CAAC,KAAK,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,uKAAA,CAAA,4BAAyB,AAAD;IAEhD,qBACE,8OAAC,8JAAA,CAAA,cAAW;QACV,cAAc;QACd,gBAAgB;QAChB,gBAAgB,2KAAA,CAAA,UAAO;QACvB,MAAM;QACN,QAAO;QACP,OAAM;QACN,eAAe;;;;;;AAGrB;uCAEe","debugId":null}},
    {"offset": {"line": 1556, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/hr/hr-rows.ts"],"sourcesContent":["import { Row } from \"simple-table-core\";\n\n// Generate HR employee data\nexport const generateHRData = (): Row[] => {\n  const departments = [\"Engineering\", \"Marketing\", \"Sales\", \"Finance\", \"HR\", \"Operations\", \"Customer Support\"];\n  const positions = [\n    \"Manager\",\n    \"Senior\",\n    \"Junior\",\n    \"Lead\",\n    \"Associate\",\n    \"Head\",\n    \"Coordinator\",\n    \"Analyst\",\n    \"Director\",\n    \"Specialist\",\n    \"Assistant\",\n    \"Executive\",\n    \"Intern\",\n  ];\n  const firstNames = [\n    \"James\",\n    \"Mary\",\n    \"John\",\n    \"Patricia\",\n    \"Robert\",\n    \"Jennifer\",\n    \"Michael\",\n    \"Elizabeth\",\n    \"William\",\n    \"Linda\",\n    \"David\",\n    \"Barbara\",\n    \"Sarah\",\n    \"Susan\",\n    \"Karen\",\n    \"Jessica\",\n    \"Lisa\",\n    \"Nancy\",\n    \"Betty\",\n    \"Margaret\",\n    \"Sandra\",\n    \"Ashley\",\n    \"Kimberly\",\n    \"Emily\",\n    \"Donna\",\n    \"Michelle\",\n    \"Carol\",\n    \"Amanda\",\n    \"Melissa\",\n    \"Deborah\",\n    \"Stephanie\",\n    \"Dorothy\",\n    \"Rebecca\",\n    \"Sharon\",\n    \"Laura\",\n    \"Cynthia\",\n    \"Amy\",\n    \"Kathleen\",\n    \"Angela\",\n    \"Shirley\",\n    \"Anna\",\n    \"Ruth\",\n    \"Brenda\",\n    \"Pamela\",\n    \"Nicole\",\n    \"Katherine\",\n    \"Samantha\",\n    \"Christine\",\n  ];\n  const lastNames = [\n    \"Smith\",\n    \"Johnson\",\n    \"Williams\",\n    \"Jones\",\n    \"Brown\",\n    \"Davis\",\n    \"Miller\",\n    \"Wilson\",\n    \"Moore\",\n    \"Taylor\",\n    \"Anderson\",\n    \"Thomas\",\n    \"Jackson\",\n    \"White\",\n    \"Harris\",\n    \"Martin\",\n    \"Thompson\",\n    \"Garcia\",\n    \"Martinez\",\n    \"Robinson\",\n    \"Clark\",\n    \"Rodriguez\",\n    \"Lewis\",\n    \"Lee\",\n    \"Walker\",\n    \"Hall\",\n    \"Allen\",\n    \"Young\",\n    \"Hernandez\",\n    \"King\",\n    \"Wright\",\n    \"Lopez\",\n    \"Hill\",\n    \"Scott\",\n    \"Green\",\n    \"Adams\",\n    \"Baker\",\n    \"Gonzalez\",\n    \"Nelson\",\n    \"Carter\",\n    \"Mitchell\",\n    \"Perez\",\n    \"Roberts\",\n    \"Turner\",\n    \"Phillips\",\n    \"Campbell\",\n    \"Parker\",\n    \"Evans\",\n  ];\n  const locations = [\"New York\", \"Los Angeles\", \"Chicago\", \"San Francisco\", \"Austin\", \"Boston\", \"Seattle\", \"Remote\"];\n  const statuses = [\"Active\", \"On Leave\", \"Probation\", \"Contract\", \"Terminated\"];\n\n  let rowId = 0;\n  const rows: Row[] = [];\n\n  // Generate a flat list of 50 employees\n  const totalEmployees = 50;\n\n  for (let i = 0; i < totalEmployees; i++) {\n    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n    const department = departments[Math.floor(Math.random() * departments.length)];\n    const position = positions[Math.floor(Math.random() * positions.length)];\n\n    // Calculate random metrics\n    const performanceScore = Math.floor(Math.random() * 41) + 60; // 60-100\n    const salaryBase = Math.floor(Math.random() * 50) + 50; // $50k - $100k base\n    const salaryMultiplier =\n      position.includes(\"Senior\") || position.includes(\"Lead\")\n        ? 1.5\n        : position.includes(\"Manager\") || position.includes(\"Director\")\n        ? 2\n        : position.includes(\"Head\") || position.includes(\"Executive\")\n        ? 2.5\n        : position.includes(\"Intern\")\n        ? 0.5\n        : 1;\n    const salary = Math.floor(salaryBase * salaryMultiplier) * 1000;\n    const status = statuses[Math.floor(Math.random() * statuses.length)];\n\n    // Generate hire date (within last 10 years)\n    const currentYear = new Date().getFullYear();\n    const hireYear = currentYear - Math.floor(Math.random() * 10);\n    const hireMonth = Math.floor(Math.random() * 12) + 1;\n    const hireDay = Math.floor(Math.random() * 28) + 1;\n    const hireDate = `${hireYear}-${hireMonth.toString().padStart(2, \"0\")}-${hireDay.toString().padStart(2, \"0\")}`;\n\n    // Calculate years of service based on hire date\n    const yearsOfService = (\n      (new Date().getTime() - new Date(hireDate).getTime()) /\n      (1000 * 60 * 60 * 24 * 365)\n    ).toFixed(1);\n\n    // Generate random email\n    const email = `${firstName.toLowerCase()}.${lastName.toLowerCase()}@company.com`;\n\n    // Random location\n    const location = locations[Math.floor(Math.random() * locations.length)];\n\n    rows.push({\n      rowMeta: { rowId: rowId++ },\n      rowData: {\n        id: Math.floor(Math.random() * 10000) + 1000,\n        department,\n        firstName,\n        lastName,\n        fullName: `${firstName} ${lastName}`,\n        position: `${position} ${\n          department.includes(\"Engineering\")\n            ? \"Engineer\"\n            : department.includes(\"Marketing\")\n            ? \"Marketer\"\n            : department.includes(\"Sales\")\n            ? \"Representative\"\n            : department.includes(\"Finance\")\n            ? \"Analyst\"\n            : department.includes(\"HR\")\n            ? \"Specialist\"\n            : department.includes(\"Operations\")\n            ? \"Manager\"\n            : \"Agent\"\n        }`,\n        email,\n        hireDate,\n        yearsOfService: parseFloat(yearsOfService),\n        salary,\n        performanceScore,\n        location,\n        status,\n      },\n    });\n  }\n\n  return rows;\n};\n"],"names":[],"mappings":";;;AAGO,MAAM,iBAAiB;IAC5B,MAAM,cAAc;QAAC;QAAe;QAAa;QAAS;QAAW;QAAM;QAAc;KAAmB;IAC5G,MAAM,YAAY;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,aAAa;QACjB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,YAAY;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,YAAY;QAAC;QAAY;QAAe;QAAW;QAAiB;QAAU;QAAU;QAAW;KAAS;IAClH,MAAM,WAAW;QAAC;QAAU;QAAY;QAAa;QAAY;KAAa;IAE9E,IAAI,QAAQ;IACZ,MAAM,OAAc,EAAE;IAEtB,uCAAuC;IACvC,MAAM,iBAAiB;IAEvB,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;QACvC,MAAM,YAAY,UAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,WAAW,MAAM,EAAE;QAC3E,MAAM,WAAW,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;QACxE,MAAM,aAAa,WAAW,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,YAAY,MAAM,EAAE;QAC9E,MAAM,WAAW,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;QAExE,2BAA2B;QAC3B,MAAM,mBAAmB,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,IAAI,SAAS;QACvE,MAAM,aAAa,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,IAAI,oBAAoB;QAC5E,MAAM,mBACJ,SAAS,QAAQ,CAAC,aAAa,SAAS,QAAQ,CAAC,UAC7C,MACA,SAAS,QAAQ,CAAC,cAAc,SAAS,QAAQ,CAAC,cAClD,IACA,SAAS,QAAQ,CAAC,WAAW,SAAS,QAAQ,CAAC,eAC/C,MACA,SAAS,QAAQ,CAAC,YAClB,MACA;QACN,MAAM,SAAS,KAAK,KAAK,CAAC,aAAa,oBAAoB;QAC3D,MAAM,SAAS,QAAQ,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS,MAAM,EAAE;QAEpE,4CAA4C;QAC5C,MAAM,cAAc,IAAI,OAAO,WAAW;QAC1C,MAAM,WAAW,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;QAC1D,MAAM,YAAY,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;QACnD,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;QACjD,MAAM,WAAW,GAAG,SAAS,CAAC,EAAE,UAAU,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;QAE9G,gDAAgD;QAChD,MAAM,iBAAiB,CACrB,CAAC,IAAI,OAAO,OAAO,KAAK,IAAI,KAAK,UAAU,OAAO,EAAE,IACpD,CAAC,OAAO,KAAK,KAAK,KAAK,GAAG,CAC5B,EAAE,OAAO,CAAC;QAEV,wBAAwB;QACxB,MAAM,QAAQ,GAAG,UAAU,WAAW,GAAG,CAAC,EAAE,SAAS,WAAW,GAAG,YAAY,CAAC;QAEhF,kBAAkB;QAClB,MAAM,WAAW,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;QAExE,KAAK,IAAI,CAAC;YACR,SAAS;gBAAE,OAAO;YAAQ;YAC1B,SAAS;gBACP,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS;gBACxC;gBACA;gBACA;gBACA,UAAU,GAAG,UAAU,CAAC,EAAE,UAAU;gBACpC,UAAU,GAAG,SAAS,CAAC,EACrB,WAAW,QAAQ,CAAC,iBAChB,aACA,WAAW,QAAQ,CAAC,eACpB,aACA,WAAW,QAAQ,CAAC,WACpB,mBACA,WAAW,QAAQ,CAAC,aACpB,YACA,WAAW,QAAQ,CAAC,QACpB,eACA,WAAW,QAAQ,CAAC,gBACpB,YACA,SACJ;gBACF;gBACA;gBACA,gBAAgB,WAAW;gBAC3B;gBACA;gBACA;gBACA;YACF;QACF;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1757, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/hr/hr-headers.tsx"],"sourcesContent":["import { HeaderObject } from \"simple-table-core\";\nimport { Avatar, Tag, Progress } from \"antd\";\n\n// Define our table headers\nexport const HEADERS: HeaderObject[] = [\n  {\n    accessor: \"fullName\",\n    label: \"Employee\",\n    width: 220,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    pinned: \"left\",\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      // Employee row, render with avatar and details\n      const initials = `${row.rowData.firstName?.toString().charAt(0) || \"\"}${\n        row.rowData.lastName?.toString().charAt(0) || \"\"\n      }`;\n      const name = row.rowData.fullName as string;\n      const position = row.rowData.position as string;\n\n      return (\n        <div className=\"flex items-center\">\n          <Avatar className=\"flex items-center justify-center bg-blue-500 text-white\" size=\"small\">\n            {initials}\n          </Avatar>\n          <div className=\"ml-2\">\n            <div>{name}</div>\n            <div className=\"text-xs text-gray-500\">{position}</div>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"performanceScore\",\n    label: \"Performance\",\n    width: 160,\n    isSortable: true,\n    isEditable: false,\n    align: \"center\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      const score = row.rowData.performanceScore as number;\n\n      const getColorByScore = (score: number): \"success\" | \"normal\" | \"exception\" => {\n        if (score >= 90) return \"success\";\n        if (score >= 65) return \"normal\";\n        return \"exception\"; // Default case for low scores\n      };\n\n      return (\n        <div className=\"w-full flex flex-col\">\n          <Progress percent={score} size=\"small\" showInfo={false} status={getColorByScore(score)} />\n          <div className=\"text-xs text-center mt-1\">{score}/100</div>\n        </div>\n      );\n    },\n  },\n  {\n    accessor: \"department\",\n    label: \"Department\",\n    width: 150,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"string\",\n  },\n  {\n    accessor: \"email\",\n    label: \"Email\",\n    width: 220,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"string\",\n  },\n  {\n    accessor: \"location\",\n    label: \"Location\",\n    width: 130,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"string\",\n  },\n  {\n    accessor: \"hireDate\",\n    label: \"Hire Date\",\n    width: 120,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    type: \"date\",\n    cellRenderer: ({ row }) => {\n      if (!row.rowData.hireDate) return \"\";\n      const date = new Date(row.rowData.hireDate as string);\n      return date.toLocaleDateString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n      });\n    },\n  },\n  {\n    accessor: \"yearsOfService\",\n    label: \"Service\",\n    width: 100,\n    isSortable: true,\n    isEditable: false,\n    align: \"center\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      if (row.rowData.yearsOfService === null) return \"\";\n      return `${row.rowData.yearsOfService} yrs`;\n    },\n  },\n  {\n    accessor: \"salary\",\n    label: \"Salary\",\n    width: 130,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      return `$${(row.rowData.salary as number).toLocaleString()}`;\n    },\n  },\n  {\n    accessor: \"status\",\n    label: \"Status\",\n    width: 120,\n    isSortable: true,\n    isEditable: false,\n    align: \"center\",\n    pinned: \"right\",\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      if (!row.rowData.status) return \"\";\n\n      const status = row.rowData.status as string;\n      const statusColor =\n        {\n          Active: \"green\",\n          \"On Leave\": \"orange\",\n          Probation: \"blue\",\n          Contract: \"purple\",\n          Terminated: \"red\",\n        }[status] || \"default\";\n\n      return <Tag color={statusColor}>{status}</Tag>;\n    },\n  },\n];\n"],"names":[],"mappings":";;;;AACA;;;AAGO,MAAM,UAA0B;IACrC;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,QAAQ;QACR,MAAM;QACN,cAAc,CAAC,EAAE,GAAG,EAAE;YACpB,+CAA+C;YAC/C,MAAM,WAAW,GAAG,IAAI,OAAO,CAAC,SAAS,EAAE,WAAW,OAAO,MAAM,KACjE,IAAI,OAAO,CAAC,QAAQ,EAAE,WAAW,OAAO,MAAM,IAC9C;YACF,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;YACjC,MAAM,WAAW,IAAI,OAAO,CAAC,QAAQ;YAErC,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,mIAAA,CAAA,SAAM;wBAAC,WAAU;wBAA0D,MAAK;kCAC9E;;;;;;kCAEH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;gCAAI,WAAU;0CAAyB;;;;;;;;;;;;;;;;;;QAIhD;IACF;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;QACN,cAAc,CAAC,EAAE,GAAG,EAAE;YACpB,MAAM,QAAQ,IAAI,OAAO,CAAC,gBAAgB;YAE1C,MAAM,kBAAkB,CAAC;gBACvB,IAAI,SAAS,IAAI,OAAO;gBACxB,IAAI,SAAS,IAAI,OAAO;gBACxB,OAAO,aAAa,8BAA8B;YACpD;YAEA,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,mIAAA,CAAA,WAAQ;wBAAC,SAAS;wBAAO,MAAK;wBAAQ,UAAU;wBAAO,QAAQ,gBAAgB;;;;;;kCAChF,8OAAC;wBAAI,WAAU;;4BAA4B;4BAAM;;;;;;;;;;;;;QAGvD;IACF;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;IACR;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;IACR;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;IACR;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;QACN,cAAc,CAAC,EAAE,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO;YAClC,MAAM,OAAO,IAAI,KAAK,IAAI,OAAO,CAAC,QAAQ;YAC1C,OAAO,KAAK,kBAAkB,CAAC,SAAS;gBACtC,OAAO;gBACP,KAAK;gBACL,MAAM;YACR;QACF;IACF;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;QACN,cAAc,CAAC,EAAE,GAAG,EAAE;YACpB,IAAI,IAAI,OAAO,CAAC,cAAc,KAAK,MAAM,OAAO;YAChD,OAAO,GAAG,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;QAC5C;IACF;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,MAAM;QACN,cAAc,CAAC,EAAE,GAAG,EAAE;YACpB,OAAO,CAAC,CAAC,EAAE,AAAC,IAAI,OAAO,CAAC,MAAM,CAAY,cAAc,IAAI;QAC9D;IACF;IACA;QACE,UAAU;QACV,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,OAAO;QACP,QAAQ;QACR,MAAM;QACN,cAAc,CAAC,EAAE,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE,OAAO;YAEhC,MAAM,SAAS,IAAI,OAAO,CAAC,MAAM;YACjC,MAAM,cACJ;gBACE,QAAQ;gBACR,YAAY;gBACZ,WAAW;gBACX,UAAU;gBACV,YAAY;YACd,CAAC,CAAC,OAAO,IAAI;YAEf,qBAAO,8OAAC,mIAAA,CAAA,MAAG;gBAAC,OAAO;0BAAc;;;;;;QACnC;IACF;CACD","debugId":null}},
    {"offset": {"line": 1976, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/hr/HRManagement.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { SimpleTable } from \"simple-table-core\";\nimport { generateHRData } from \"./hr-rows\";\nimport { HEADERS } from \"./hr-headers\";\nimport \"simple-table-core/styles.css\";\n\nconst HRManagement = () => {\n  const [data] = useState(generateHRData());\n\n  return (\n    <SimpleTable\n      columnReordering\n      columnResizing\n      defaultHeaders={HEADERS}\n      rows={data}\n      rowsPerPage={10}\n      selectableCells\n      shouldPaginate\n      theme=\"light\"\n    />\n  );\n};\n\nexport default HRManagement;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAGA,MAAM,eAAe;IACnB,MAAM,CAAC,KAAK,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD;IAErC,qBACE,8OAAC,8JAAA,CAAA,cAAW;QACV,gBAAgB;QAChB,cAAc;QACd,gBAAgB,qJAAA,CAAA,UAAO;QACvB,MAAM;QACN,aAAa;QACb,eAAe;QACf,cAAc;QACd,OAAM;;;;;;AAGZ;uCAEe","debugId":null}},
    {"offset": {"line": 2014, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/billing/billing-rows.ts"],"sourcesContent":["import { Row } from \"simple-table-core\";\n\n// Utility functions\nconst randomBetween = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\nconst randomChoice = <T>(arr: T[]): T => arr[Math.floor(Math.random() * arr.length)];\n\n// Generate a random date between two dates\nconst randomDate = (start: Date, end: Date) => {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\n// Current date and last year date\nconst currentDate = new Date();\nconst oneYearAgo = new Date();\noneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n\n// Generate random account name\nconst generateAccountName = () => {\n  const companies = [\n    \"Acme Corp\",\n    \"Globex\",\n    \"Soylent\",\n    \"Initech\",\n    \"Umbrella\",\n    \"Stark Industries\",\n    \"Wayne Enterprises\",\n    \"Cyberdyne\",\n    \"Massive Dynamic\",\n    \"Aperture Science\",\n    \"Virtucon\",\n    \"LexCorp\",\n    \"Weyland-Yutani\",\n    \"Oscorp\",\n    \"Dharma Initiative\",\n  ];\n\n  const suffixes = [\n    \"Inc\",\n    \"LLC\",\n    \"Corp\",\n    \"Industries\",\n    \"Technologies\",\n    \"Solutions\",\n    \"Software\",\n    \"Group\",\n  ];\n\n  if (Math.random() > 0.5) {\n    return `${randomChoice(companies)} ${randomChoice(suffixes)}`;\n  } else {\n    return randomChoice(companies);\n  }\n};\n\n// Generate charge description\nconst generateChargeDescription = () => {\n  const tiers = [\"Small\", \"Medium\", \"Large\", \"Basic\", \"Premium\", \"Enterprise\", \"Standard\"];\n  const types = [\n    \"Installation\",\n    \"Setup\",\n    \"Support\",\n    \"Maintenance\",\n    \"Usage\",\n    \"License\",\n    \"Service\",\n    \"Access\",\n    \"Storage\",\n    \"Processing\",\n  ];\n\n  return `${randomChoice(tiers)} - ${randomChoice(types)}`;\n};\n\n// Generate monthly data for a row\nconst generateMonthlyData = (\n  startMonth: number,\n  startYear: number,\n  amount: number,\n  monthsToDistribute: number = 12\n) => {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n\n  // For charges, distribute the amount over the months\n  let remainingAmount = amount;\n  const monthlyValues: Record<string, number> = {};\n\n  // New revenue and balance records\n  const monthlyRevenue: Record<string, number> = {};\n  const monthlyBalance: Record<string, number> = {};\n\n  for (let i = 0; i < 12; i++) {\n    const monthIndex = (currentMonth - i + 12) % 12;\n    const year = currentMonth - i < 0 ? currentYear - 1 : currentYear;\n    const key = `month_${months[monthIndex]}_${year}`;\n    const revenueKey = `revenue_${months[monthIndex]}_${year}`;\n    const balanceKey = `balance_${months[monthIndex]}_${year}`;\n\n    // If this month is before the start date or we've already distributed all months\n    const isBeforeStart = year < startYear || (year === startYear && monthIndex < startMonth);\n\n    if (isBeforeStart || i >= monthsToDistribute) {\n      monthlyValues[key] = 0;\n      monthlyRevenue[revenueKey] = 0;\n      monthlyBalance[balanceKey] = 0;\n      continue;\n    }\n\n    // For the last month, use all remaining amount\n    if (i === monthsToDistribute - 1) {\n      monthlyValues[key] = parseFloat(remainingAmount.toFixed(2));\n    } else {\n      // Distribute with some randomness\n      const variability = 0.2; // 20% variability\n      const baseMonthlyAmount = remainingAmount / (monthsToDistribute - i);\n      const variance = baseMonthlyAmount * variability * (Math.random() * 2 - 1);\n      let monthlyAmount = Math.min(remainingAmount, baseMonthlyAmount + variance);\n\n      // Ensure we don't exceed the remaining amount and round to 2 decimals\n      monthlyAmount = parseFloat(Math.min(remainingAmount, monthlyAmount).toFixed(2));\n      remainingAmount -= monthlyAmount;\n      monthlyValues[key] = monthlyAmount;\n    }\n\n    // Split the monthly amount between revenue and balance\n    // Revenue is typically 70-95% of the amount\n    const revenuePercentage = 0.7 + Math.random() * 0.25;\n    monthlyRevenue[revenueKey] = parseFloat((monthlyValues[key] * revenuePercentage).toFixed(2));\n    monthlyBalance[balanceKey] = parseFloat(\n      (monthlyValues[key] - monthlyRevenue[revenueKey]).toFixed(2)\n    );\n  }\n\n  return {\n    ...monthlyValues,\n    ...monthlyRevenue,\n    ...monthlyBalance,\n  };\n};\n\n// Generate revenue recognition data\nconst calculateRevenueRecognition = (amount: number, createdDate: Date) => {\n  const diffMonths =\n    currentDate.getMonth() -\n    createdDate.getMonth() +\n    12 * (currentDate.getFullYear() - createdDate.getFullYear());\n\n  // Calculate how much revenue has been recognized based on time elapsed\n  const recognitionPeriod = randomBetween(1, 12); // Revenue is recognized over 1-12 months\n  const recognizedPercentage = Math.min(1, diffMonths / recognitionPeriod);\n  const recognizedRevenue = parseFloat((amount * recognizedPercentage).toFixed(2));\n  const deferredRevenue = parseFloat((amount - recognizedRevenue).toFixed(2));\n\n  return {\n    recognizedRevenue,\n    deferredRevenue,\n  };\n};\n\n// Generate billing data with accounts -> invoices -> charges\nexport const generateBillingData = (): Row[] => {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  let rowId = 0;\n  const accountRows: Row[] = [];\n\n  // Invoice statuses and probabilities\n  const invoiceStatuses = [\"paid\", \"overdue\", \"pending\", \"partial\", \"cancelled\"];\n  const invoiceStatusProbs = [0.6, 0.1, 0.15, 0.1, 0.05]; // 60% paid, 10% overdue, etc.\n\n  // Account statuses\n  const accountStatuses = [\"active\", \"pending\", \"cancelled\"];\n  const accountStatusProbs = [0.85, 0.1, 0.05]; // 85% active, 10% pending, 5% cancelled\n\n  // Generate 5-8 accounts\n  const accountCount = randomBetween(5, 8);\n\n  for (let a = 0; a < accountCount; a++) {\n    // Generate account data\n    const accountName = generateAccountName();\n    const accountId = `ACC-${100000 + randomBetween(1, 99999)}`;\n    const accountCreatedDate = randomDate(oneYearAgo, currentDate);\n\n    // Determine account status based on probability\n    let accountStatus = \"active\";\n    const statusRoll = Math.random();\n    let cumProb = 0;\n\n    for (let i = 0; i < accountStatuses.length; i++) {\n      cumProb += accountStatusProbs[i];\n      if (statusRoll <= cumProb) {\n        accountStatus = accountStatuses[i];\n        break;\n      }\n    }\n\n    // Generate invoices for this account\n    const invoiceCount = randomBetween(3, 8);\n    const invoiceChildren: Row[] = [];\n    let accountTotal = 0;\n    let accountRemaining = 0;\n    let accountRecognizedRevenue = 0;\n    let accountDeferredRevenue = 0;\n\n    for (let i = 0; i < invoiceCount; i++) {\n      // Create invoice with date after account creation but within the last year\n      const earliestDate = new Date(Math.max(oneYearAgo.getTime(), accountCreatedDate.getTime()));\n      const invoiceCreatedDate = randomDate(earliestDate, currentDate);\n      const invoiceMonth = invoiceCreatedDate.getMonth();\n      const invoiceYear = invoiceCreatedDate.getFullYear();\n\n      // Generate random due date (10-30 days after invoice date)\n      const dueDate = new Date(invoiceCreatedDate);\n      dueDate.setDate(dueDate.getDate() + randomBetween(10, 30));\n\n      const invoiceNumber = randomBetween(100, 999);\n      const invoiceId = `INV-${invoiceNumber}`;\n      // Use I-XXX format for invoice name\n      const invoiceName = `I-${invoiceNumber}`;\n\n      const invoiceAmount = randomBetween(500, 10000) + Math.random();\n      const invoiceAmountRounded = parseFloat(invoiceAmount.toFixed(2));\n\n      // Determine invoice status based on probability\n      let invoiceStatus = \"paid\";\n      const statusRoll = Math.random();\n      let cumProb = 0;\n\n      for (let i = 0; i < invoiceStatuses.length; i++) {\n        cumProb += invoiceStatusProbs[i];\n        if (statusRoll <= cumProb) {\n          invoiceStatus = invoiceStatuses[i];\n          break;\n        }\n      }\n\n      // Calculate remaining amount based on status\n      let remainingAmount = 0;\n      switch (invoiceStatus) {\n        case \"paid\":\n          remainingAmount = 0;\n          break;\n        case \"overdue\":\n        case \"pending\":\n          remainingAmount = invoiceAmountRounded;\n          break;\n        case \"partial\":\n          remainingAmount = parseFloat((invoiceAmountRounded * Math.random() * 0.8).toFixed(2));\n          break;\n        case \"cancelled\":\n          remainingAmount = 0;\n          break;\n      }\n\n      // Generate charges for this invoice\n      const chargeCount = randomBetween(2, 5);\n      const chargeChildren: Row[] = [];\n      let invoiceRecognizedRevenue = 0;\n      let invoiceDeferredRevenue = 0;\n      const chargeTotalAmount = invoiceAmountRounded;\n      let currentChargeTotal = 0;\n\n      for (let c = 0; c < chargeCount; c++) {\n        // Calculate charge amount (divide invoice amount among charges)\n        let chargeAmount: number;\n\n        if (c === chargeCount - 1) {\n          // Last charge gets the remainder to ensure sum equals invoice amount\n          chargeAmount = parseFloat((chargeTotalAmount - currentChargeTotal).toFixed(2));\n        } else {\n          // Random portion of remaining amount\n          const remainingForCharges = chargeTotalAmount - currentChargeTotal;\n          const portion = Math.random() * 0.7; // Take up to 70% of what's left\n          chargeAmount = parseFloat((remainingForCharges * portion).toFixed(2));\n          currentChargeTotal += chargeAmount;\n        }\n\n        const chargeId = `CHG-${100000 + randomBetween(1, 999999)}`;\n\n        // Calculate revenue recognition\n        const { recognizedRevenue, deferredRevenue } = calculateRevenueRecognition(\n          chargeAmount,\n          invoiceCreatedDate\n        );\n\n        invoiceRecognizedRevenue += recognizedRevenue;\n        invoiceDeferredRevenue += deferredRevenue;\n\n        // Generate monthly distribution for this charge\n        const monthlyData = generateMonthlyData(\n          invoiceMonth,\n          invoiceYear,\n          chargeAmount,\n          randomBetween(1, 6) // Distribute over 1-6 months\n        );\n\n        // Create charge row\n        chargeChildren.push({\n          rowMeta: { rowId: rowId++ },\n          rowData: {\n            type: \"charge\",\n            name: generateChargeDescription(),\n            id: chargeId,\n            createdDate: invoiceCreatedDate.toISOString(),\n            amount: chargeAmount,\n            recognizedRevenue,\n            deferredRevenue,\n            ...monthlyData,\n          },\n        });\n      }\n\n      // Calculate monthly data for the invoice by summing its charges\n      const invoiceMonthlyData: Record<string, number> = {};\n      const invoiceMonthlyRevenue: Record<string, number> = {};\n      const invoiceMonthlyBalance: Record<string, number> = {};\n\n      // For each month\n      for (let i = 0; i < 12; i++) {\n        const monthIndex = (currentDate.getMonth() - i + 12) % 12;\n        const year =\n          currentDate.getMonth() - i < 0\n            ? currentDate.getFullYear() - 1\n            : currentDate.getFullYear();\n        const key = `month_${months[monthIndex]}_${year}`;\n        const revenueKey = `revenue_${months[monthIndex]}_${year}`;\n        const balanceKey = `balance_${months[monthIndex]}_${year}`;\n\n        // Sum this month's value from all charges\n        invoiceMonthlyData[key] = chargeChildren.reduce((sum, charge) => {\n          return sum + ((charge.rowData[key] as number) || 0);\n        }, 0);\n\n        // Sum this month's revenue from all charges\n        invoiceMonthlyRevenue[revenueKey] = chargeChildren.reduce((sum, charge) => {\n          return sum + ((charge.rowData[revenueKey] as number) || 0);\n        }, 0);\n\n        // Sum this month's balance from all charges\n        invoiceMonthlyBalance[balanceKey] = chargeChildren.reduce((sum, charge) => {\n          return sum + ((charge.rowData[balanceKey] as number) || 0);\n        }, 0);\n      }\n\n      // Update account totals\n      accountTotal += invoiceAmountRounded;\n      accountRemaining += remainingAmount;\n      accountRecognizedRevenue += invoiceRecognizedRevenue;\n      accountDeferredRevenue += invoiceDeferredRevenue;\n\n      // Create invoice row\n      invoiceChildren.push({\n        rowMeta: { rowId: rowId++, children: chargeChildren, isExpanded: false },\n        rowData: {\n          type: \"invoice\",\n          name: invoiceName,\n          id: invoiceId,\n          status: invoiceStatus,\n          createdDate: invoiceCreatedDate.toISOString(),\n          dueDate: dueDate.toISOString(),\n          amount: invoiceAmountRounded,\n          remaining: remainingAmount,\n          recognizedRevenue: parseFloat(invoiceRecognizedRevenue.toFixed(2)),\n          deferredRevenue: parseFloat(invoiceDeferredRevenue.toFixed(2)),\n          ...invoiceMonthlyData,\n          ...invoiceMonthlyRevenue,\n          ...invoiceMonthlyBalance,\n        },\n      });\n    }\n\n    // Calculate monthly data for the account by summing its invoices\n    const accountMonthlyData: Record<string, number> = {};\n    const accountMonthlyRevenue: Record<string, number> = {};\n    const accountMonthlyBalance: Record<string, number> = {};\n\n    // For each month\n    for (let i = 0; i < 12; i++) {\n      const monthIndex = (currentDate.getMonth() - i + 12) % 12;\n      const year =\n        currentDate.getMonth() - i < 0 ? currentDate.getFullYear() - 1 : currentDate.getFullYear();\n      const key = `month_${months[monthIndex]}_${year}`;\n      const revenueKey = `revenue_${months[monthIndex]}_${year}`;\n      const balanceKey = `balance_${months[monthIndex]}_${year}`;\n\n      // Sum this month's value from all invoices\n      accountMonthlyData[key] = invoiceChildren.reduce((sum, invoice) => {\n        return sum + ((invoice.rowData[key] as number) || 0);\n      }, 0);\n\n      // Sum this month's revenue from all invoices\n      accountMonthlyRevenue[revenueKey] = invoiceChildren.reduce((sum, invoice) => {\n        return sum + ((invoice.rowData[revenueKey] as number) || 0);\n      }, 0);\n\n      // Sum this month's balance from all invoices\n      accountMonthlyBalance[balanceKey] = invoiceChildren.reduce((sum, invoice) => {\n        return sum + ((invoice.rowData[balanceKey] as number) || 0);\n      }, 0);\n    }\n\n    // Create account row\n    accountRows.push({\n      rowMeta: { rowId: rowId++, children: invoiceChildren, isExpanded: true },\n      rowData: {\n        type: \"account\",\n        name: accountName,\n        id: accountId,\n        status: accountStatus,\n        createdDate: accountCreatedDate.toISOString(),\n        amount: parseFloat(accountTotal.toFixed(2)),\n        remaining: parseFloat(accountRemaining.toFixed(2)),\n        recognizedRevenue: parseFloat(accountRecognizedRevenue.toFixed(2)),\n        deferredRevenue: parseFloat(accountDeferredRevenue.toFixed(2)),\n        ...accountMonthlyData,\n        ...accountMonthlyRevenue,\n        ...accountMonthlyBalance,\n      },\n    });\n  }\n\n  return accountRows;\n};\n"],"names":[],"mappings":";;;AAEA,oBAAoB;AACpB,MAAM,gBAAgB,CAAC,KAAa,MAClC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,MAAM,CAAC,IAAI;AAC/C,MAAM,eAAe,CAAI,MAAgB,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AAEpF,2CAA2C;AAC3C,MAAM,aAAa,CAAC,OAAa;IAC/B,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,KAAK,MAAM,KAAK,CAAC,IAAI,OAAO,KAAK,MAAM,OAAO,EAAE;AACpF;AAEA,kCAAkC;AAClC,MAAM,cAAc,IAAI;AACxB,MAAM,aAAa,IAAI;AACvB,WAAW,WAAW,CAAC,YAAY,WAAW,KAAK;AAEnD,+BAA+B;AAC/B,MAAM,sBAAsB;IAC1B,MAAM,YAAY;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,WAAW;QACf;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,KAAK,MAAM,KAAK,KAAK;QACvB,OAAO,GAAG,aAAa,WAAW,CAAC,EAAE,aAAa,WAAW;IAC/D,OAAO;QACL,OAAO,aAAa;IACtB;AACF;AAEA,8BAA8B;AAC9B,MAAM,4BAA4B;IAChC,MAAM,QAAQ;QAAC;QAAS;QAAU;QAAS;QAAS;QAAW;QAAc;KAAW;IACxF,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,OAAO,GAAG,aAAa,OAAO,GAAG,EAAE,aAAa,QAAQ;AAC1D;AAEA,kCAAkC;AAClC,MAAM,sBAAsB,CAC1B,YACA,WACA,QACA,qBAA6B,EAAE;IAE/B,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,eAAe,YAAY,QAAQ;IACzC,MAAM,cAAc,YAAY,WAAW;IAE3C,qDAAqD;IACrD,IAAI,kBAAkB;IACtB,MAAM,gBAAwC,CAAC;IAE/C,kCAAkC;IAClC,MAAM,iBAAyC,CAAC;IAChD,MAAM,iBAAyC,CAAC;IAEhD,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;QAC3B,MAAM,aAAa,CAAC,eAAe,IAAI,EAAE,IAAI;QAC7C,MAAM,OAAO,eAAe,IAAI,IAAI,cAAc,IAAI;QACtD,MAAM,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;QACjD,MAAM,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;QAC1D,MAAM,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;QAE1D,iFAAiF;QACjF,MAAM,gBAAgB,OAAO,aAAc,SAAS,aAAa,aAAa;QAE9E,IAAI,iBAAiB,KAAK,oBAAoB;YAC5C,aAAa,CAAC,IAAI,GAAG;YACrB,cAAc,CAAC,WAAW,GAAG;YAC7B,cAAc,CAAC,WAAW,GAAG;YAC7B;QACF;QAEA,+CAA+C;QAC/C,IAAI,MAAM,qBAAqB,GAAG;YAChC,aAAa,CAAC,IAAI,GAAG,WAAW,gBAAgB,OAAO,CAAC;QAC1D,OAAO;YACL,kCAAkC;YAClC,MAAM,cAAc,KAAK,kBAAkB;YAC3C,MAAM,oBAAoB,kBAAkB,CAAC,qBAAqB,CAAC;YACnE,MAAM,WAAW,oBAAoB,cAAc,CAAC,KAAK,MAAM,KAAK,IAAI,CAAC;YACzE,IAAI,gBAAgB,KAAK,GAAG,CAAC,iBAAiB,oBAAoB;YAElE,sEAAsE;YACtE,gBAAgB,WAAW,KAAK,GAAG,CAAC,iBAAiB,eAAe,OAAO,CAAC;YAC5E,mBAAmB;YACnB,aAAa,CAAC,IAAI,GAAG;QACvB;QAEA,uDAAuD;QACvD,4CAA4C;QAC5C,MAAM,oBAAoB,MAAM,KAAK,MAAM,KAAK;QAChD,cAAc,CAAC,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC,IAAI,GAAG,iBAAiB,EAAE,OAAO,CAAC;QACzF,cAAc,CAAC,WAAW,GAAG,WAC3B,CAAC,aAAa,CAAC,IAAI,GAAG,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC;IAE9D;IAEA,OAAO;QACL,GAAG,aAAa;QAChB,GAAG,cAAc;QACjB,GAAG,cAAc;IACnB;AACF;AAEA,oCAAoC;AACpC,MAAM,8BAA8B,CAAC,QAAgB;IACnD,MAAM,aACJ,YAAY,QAAQ,KACpB,YAAY,QAAQ,KACpB,KAAK,CAAC,YAAY,WAAW,KAAK,YAAY,WAAW,EAAE;IAE7D,uEAAuE;IACvE,MAAM,oBAAoB,cAAc,GAAG,KAAK,yCAAyC;IACzF,MAAM,uBAAuB,KAAK,GAAG,CAAC,GAAG,aAAa;IACtD,MAAM,oBAAoB,WAAW,CAAC,SAAS,oBAAoB,EAAE,OAAO,CAAC;IAC7E,MAAM,kBAAkB,WAAW,CAAC,SAAS,iBAAiB,EAAE,OAAO,CAAC;IAExE,OAAO;QACL;QACA;IACF;AACF;AAGO,MAAM,sBAAsB;IACjC,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,IAAI,QAAQ;IACZ,MAAM,cAAqB,EAAE;IAE7B,qCAAqC;IACrC,MAAM,kBAAkB;QAAC;QAAQ;QAAW;QAAW;QAAW;KAAY;IAC9E,MAAM,qBAAqB;QAAC;QAAK;QAAK;QAAM;QAAK;KAAK,EAAE,8BAA8B;IAEtF,mBAAmB;IACnB,MAAM,kBAAkB;QAAC;QAAU;QAAW;KAAY;IAC1D,MAAM,qBAAqB;QAAC;QAAM;QAAK;KAAK,EAAE,wCAAwC;IAEtF,wBAAwB;IACxB,MAAM,eAAe,cAAc,GAAG;IAEtC,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,IAAK;QACrC,wBAAwB;QACxB,MAAM,cAAc;QACpB,MAAM,YAAY,CAAC,IAAI,EAAE,SAAS,cAAc,GAAG,QAAQ;QAC3D,MAAM,qBAAqB,WAAW,YAAY;QAElD,gDAAgD;QAChD,IAAI,gBAAgB;QACpB,MAAM,aAAa,KAAK,MAAM;QAC9B,IAAI,UAAU;QAEd,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;YAC/C,WAAW,kBAAkB,CAAC,EAAE;YAChC,IAAI,cAAc,SAAS;gBACzB,gBAAgB,eAAe,CAAC,EAAE;gBAClC;YACF;QACF;QAEA,qCAAqC;QACrC,MAAM,eAAe,cAAc,GAAG;QACtC,MAAM,kBAAyB,EAAE;QACjC,IAAI,eAAe;QACnB,IAAI,mBAAmB;QACvB,IAAI,2BAA2B;QAC/B,IAAI,yBAAyB;QAE7B,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,IAAK;YACrC,2EAA2E;YAC3E,MAAM,eAAe,IAAI,KAAK,KAAK,GAAG,CAAC,WAAW,OAAO,IAAI,mBAAmB,OAAO;YACvF,MAAM,qBAAqB,WAAW,cAAc;YACpD,MAAM,eAAe,mBAAmB,QAAQ;YAChD,MAAM,cAAc,mBAAmB,WAAW;YAElD,2DAA2D;YAC3D,MAAM,UAAU,IAAI,KAAK;YACzB,QAAQ,OAAO,CAAC,QAAQ,OAAO,KAAK,cAAc,IAAI;YAEtD,MAAM,gBAAgB,cAAc,KAAK;YACzC,MAAM,YAAY,CAAC,IAAI,EAAE,eAAe;YACxC,oCAAoC;YACpC,MAAM,cAAc,CAAC,EAAE,EAAE,eAAe;YAExC,MAAM,gBAAgB,cAAc,KAAK,SAAS,KAAK,MAAM;YAC7D,MAAM,uBAAuB,WAAW,cAAc,OAAO,CAAC;YAE9D,gDAAgD;YAChD,IAAI,gBAAgB;YACpB,MAAM,aAAa,KAAK,MAAM;YAC9B,IAAI,UAAU;YAEd,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;gBAC/C,WAAW,kBAAkB,CAAC,EAAE;gBAChC,IAAI,cAAc,SAAS;oBACzB,gBAAgB,eAAe,CAAC,EAAE;oBAClC;gBACF;YACF;YAEA,6CAA6C;YAC7C,IAAI,kBAAkB;YACtB,OAAQ;gBACN,KAAK;oBACH,kBAAkB;oBAClB;gBACF,KAAK;gBACL,KAAK;oBACH,kBAAkB;oBAClB;gBACF,KAAK;oBACH,kBAAkB,WAAW,CAAC,uBAAuB,KAAK,MAAM,KAAK,GAAG,EAAE,OAAO,CAAC;oBAClF;gBACF,KAAK;oBACH,kBAAkB;oBAClB;YACJ;YAEA,oCAAoC;YACpC,MAAM,cAAc,cAAc,GAAG;YACrC,MAAM,iBAAwB,EAAE;YAChC,IAAI,2BAA2B;YAC/B,IAAI,yBAAyB;YAC7B,MAAM,oBAAoB;YAC1B,IAAI,qBAAqB;YAEzB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAAK;gBACpC,gEAAgE;gBAChE,IAAI;gBAEJ,IAAI,MAAM,cAAc,GAAG;oBACzB,qEAAqE;oBACrE,eAAe,WAAW,CAAC,oBAAoB,kBAAkB,EAAE,OAAO,CAAC;gBAC7E,OAAO;oBACL,qCAAqC;oBACrC,MAAM,sBAAsB,oBAAoB;oBAChD,MAAM,UAAU,KAAK,MAAM,KAAK,KAAK,gCAAgC;oBACrE,eAAe,WAAW,CAAC,sBAAsB,OAAO,EAAE,OAAO,CAAC;oBAClE,sBAAsB;gBACxB;gBAEA,MAAM,WAAW,CAAC,IAAI,EAAE,SAAS,cAAc,GAAG,SAAS;gBAE3D,gCAAgC;gBAChC,MAAM,EAAE,iBAAiB,EAAE,eAAe,EAAE,GAAG,4BAC7C,cACA;gBAGF,4BAA4B;gBAC5B,0BAA0B;gBAE1B,gDAAgD;gBAChD,MAAM,cAAc,oBAClB,cACA,aACA,cACA,cAAc,GAAG,GAAG,6BAA6B;;gBAGnD,oBAAoB;gBACpB,eAAe,IAAI,CAAC;oBAClB,SAAS;wBAAE,OAAO;oBAAQ;oBAC1B,SAAS;wBACP,MAAM;wBACN,MAAM;wBACN,IAAI;wBACJ,aAAa,mBAAmB,WAAW;wBAC3C,QAAQ;wBACR;wBACA;wBACA,GAAG,WAAW;oBAChB;gBACF;YACF;YAEA,gEAAgE;YAChE,MAAM,qBAA6C,CAAC;YACpD,MAAM,wBAAgD,CAAC;YACvD,MAAM,wBAAgD,CAAC;YAEvD,iBAAiB;YACjB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;gBAC3B,MAAM,aAAa,CAAC,YAAY,QAAQ,KAAK,IAAI,EAAE,IAAI;gBACvD,MAAM,OACJ,YAAY,QAAQ,KAAK,IAAI,IACzB,YAAY,WAAW,KAAK,IAC5B,YAAY,WAAW;gBAC7B,MAAM,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;gBACjD,MAAM,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;gBAC1D,MAAM,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;gBAE1D,0CAA0C;gBAC1C,kBAAkB,CAAC,IAAI,GAAG,eAAe,MAAM,CAAC,CAAC,KAAK;oBACpD,OAAO,MAAM,CAAC,AAAC,OAAO,OAAO,CAAC,IAAI,IAAe,CAAC;gBACpD,GAAG;gBAEH,4CAA4C;gBAC5C,qBAAqB,CAAC,WAAW,GAAG,eAAe,MAAM,CAAC,CAAC,KAAK;oBAC9D,OAAO,MAAM,CAAC,AAAC,OAAO,OAAO,CAAC,WAAW,IAAe,CAAC;gBAC3D,GAAG;gBAEH,4CAA4C;gBAC5C,qBAAqB,CAAC,WAAW,GAAG,eAAe,MAAM,CAAC,CAAC,KAAK;oBAC9D,OAAO,MAAM,CAAC,AAAC,OAAO,OAAO,CAAC,WAAW,IAAe,CAAC;gBAC3D,GAAG;YACL;YAEA,wBAAwB;YACxB,gBAAgB;YAChB,oBAAoB;YACpB,4BAA4B;YAC5B,0BAA0B;YAE1B,qBAAqB;YACrB,gBAAgB,IAAI,CAAC;gBACnB,SAAS;oBAAE,OAAO;oBAAS,UAAU;oBAAgB,YAAY;gBAAM;gBACvE,SAAS;oBACP,MAAM;oBACN,MAAM;oBACN,IAAI;oBACJ,QAAQ;oBACR,aAAa,mBAAmB,WAAW;oBAC3C,SAAS,QAAQ,WAAW;oBAC5B,QAAQ;oBACR,WAAW;oBACX,mBAAmB,WAAW,yBAAyB,OAAO,CAAC;oBAC/D,iBAAiB,WAAW,uBAAuB,OAAO,CAAC;oBAC3D,GAAG,kBAAkB;oBACrB,GAAG,qBAAqB;oBACxB,GAAG,qBAAqB;gBAC1B;YACF;QACF;QAEA,iEAAiE;QACjE,MAAM,qBAA6C,CAAC;QACpD,MAAM,wBAAgD,CAAC;QACvD,MAAM,wBAAgD,CAAC;QAEvD,iBAAiB;QACjB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,MAAM,aAAa,CAAC,YAAY,QAAQ,KAAK,IAAI,EAAE,IAAI;YACvD,MAAM,OACJ,YAAY,QAAQ,KAAK,IAAI,IAAI,YAAY,WAAW,KAAK,IAAI,YAAY,WAAW;YAC1F,MAAM,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;YACjD,MAAM,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;YAC1D,MAAM,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM;YAE1D,2CAA2C;YAC3C,kBAAkB,CAAC,IAAI,GAAG,gBAAgB,MAAM,CAAC,CAAC,KAAK;gBACrD,OAAO,MAAM,CAAC,AAAC,QAAQ,OAAO,CAAC,IAAI,IAAe,CAAC;YACrD,GAAG;YAEH,6CAA6C;YAC7C,qBAAqB,CAAC,WAAW,GAAG,gBAAgB,MAAM,CAAC,CAAC,KAAK;gBAC/D,OAAO,MAAM,CAAC,AAAC,QAAQ,OAAO,CAAC,WAAW,IAAe,CAAC;YAC5D,GAAG;YAEH,6CAA6C;YAC7C,qBAAqB,CAAC,WAAW,GAAG,gBAAgB,MAAM,CAAC,CAAC,KAAK;gBAC/D,OAAO,MAAM,CAAC,AAAC,QAAQ,OAAO,CAAC,WAAW,IAAe,CAAC;YAC5D,GAAG;QACL;QAEA,qBAAqB;QACrB,YAAY,IAAI,CAAC;YACf,SAAS;gBAAE,OAAO;gBAAS,UAAU;gBAAiB,YAAY;YAAK;YACvE,SAAS;gBACP,MAAM;gBACN,MAAM;gBACN,IAAI;gBACJ,QAAQ;gBACR,aAAa,mBAAmB,WAAW;gBAC3C,QAAQ,WAAW,aAAa,OAAO,CAAC;gBACxC,WAAW,WAAW,iBAAiB,OAAO,CAAC;gBAC/C,mBAAmB,WAAW,yBAAyB,OAAO,CAAC;gBAC/D,iBAAiB,WAAW,uBAAuB,OAAO,CAAC;gBAC3D,GAAG,kBAAkB;gBACrB,GAAG,qBAAqB;gBACxB,GAAG,qBAAqB;YAC1B;QACF;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 2429, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/billing/billing-headers.tsx"],"sourcesContent":["import { HeaderObject } from \"simple-table-core\";\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// Get current month and generate 12 months (current month + 11 previous)\nconst generateMonthHeaders = () => {\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n\n  const headers: HeaderObject[] = [];\n\n  // Generate 12 months of headers (current month and 11 previous)\n  for (let monthIndex = 0; monthIndex < months.length; monthIndex++) {\n    const year = currentMonth - monthIndex < 0 ? currentYear - 1 : currentYear;\n\n    // Get full month name\n    const fullMonthName = new Date(year, monthIndex).toLocaleString(\"default\", { month: \"long\" });\n\n    headers.push({\n      accessor: `month_${months[monthIndex]}_${year}`,\n      label: `${fullMonthName} ${year}`,\n      width: 200,\n      isSortable: true,\n      isEditable: false,\n      align: \"right\",\n      type: \"number\",\n      children: [\n        {\n          label: \"Balance\",\n          accessor: `balance_${months[monthIndex]}_${year}`,\n          width: 200,\n          isSortable: true,\n          isEditable: false,\n          align: \"right\",\n          type: \"number\",\n          cellRenderer: ({ row, accessor }) => {\n            const balance = row.rowData[accessor] as number;\n            if (!balance) return \"—\";\n\n            return `$${balance.toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}`;\n          },\n        },\n        {\n          label: \"Revenue\",\n          accessor: `revenue_${months[monthIndex]}_${year}`,\n          width: 200,\n          isSortable: true,\n          isEditable: false,\n          align: \"right\",\n          type: \"number\",\n          cellRenderer: ({ row, accessor }) => {\n            const revenue = row.rowData[accessor] as number;\n            if (!revenue) return \"—\";\n\n            return `$${revenue.toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}`;\n          },\n        },\n      ],\n    });\n  }\n\n  return headers;\n};\n\n// Main headers\nexport const HEADERS: HeaderObject[] = [\n  {\n    accessor: \"name\",\n    label: \"Name\",\n    width: 250,\n    expandable: true,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    pinned: \"left\",\n    type: \"string\",\n    cellRenderer: ({ row }) => {\n      const name = row.rowData.name as string;\n\n      return <div className={row.rowData.type === \"account\" ? \"font-semibold\" : \"\"}>{name}</div>;\n    },\n  },\n  {\n    accessor: \"amount\",\n    label: \"Total Amount\",\n    width: 130,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      const amount = row.rowData.amount as number;\n      if (!amount) return \"—\";\n\n      return `$${amount.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      })}`;\n    },\n  },\n  {\n    accessor: \"deferredRevenue\",\n    label: \"Deferred Revenue\",\n    width: 180,\n    isSortable: true,\n    isEditable: false,\n    align: \"right\",\n    type: \"number\",\n    cellRenderer: ({ row }) => {\n      const amount = row.rowData.amount as number;\n      const deferred = row.rowData.deferredRevenue as number;\n\n      if (deferred === undefined || amount === undefined) return \"—\";\n\n      return `$${deferred.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      })}`;\n    },\n  },\n  ...generateMonthHeaders(), // Add the monthly columns\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2575, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/examples/billing/BillingDashboard.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { SimpleTable } from \"simple-table-core\";\nimport { generateBillingData } from \"./billing-rows\";\nimport { HEADERS } from \"./billing-headers\";\nimport \"simple-table-core/styles.css\";\n\nconst BillingDashboard = ({ theme = \"light\" }: { theme?: \"light\" | \"custom\" }) => {\n  const [data] = useState(generateBillingData());\n\n  return (\n    <SimpleTable\n      columnResizing\n      columnReordering\n      defaultHeaders={HEADERS}\n      rows={data}\n      height=\"70dvh\"\n      theme={theme}\n      selectableCells\n      editColumns\n    />\n  );\n};\n\nexport default BillingDashboard;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAGA,MAAM,mBAAmB,CAAC,EAAE,QAAQ,OAAO,EAAkC;IAC3E,MAAM,CAAC,KAAK,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,2JAAA,CAAA,sBAAmB,AAAD;IAE1C,qBACE,8OAAC,8JAAA,CAAA,cAAW;QACV,cAAc;QACd,gBAAgB;QAChB,gBAAgB,+JAAA,CAAA,UAAO;QACvB,MAAM;QACN,QAAO;QACP,OAAO;QACP,eAAe;QACf,WAAW;;;;;;AAGjB;uCAEe","debugId":null}},
    {"offset": {"line": 2613, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/app/examples/layout.tsx"],"sourcesContent":["import { usePathname, useRouter } from \"next/navigation\";\nimport { trackLinkClick } from \"@/utils/analytics\";\nimport PageLayout from \"@/components/PageLayout\";\nimport { Button, Space, Dropdown } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChartLine,\n  faIndustry,\n  faUsers,\n  faFileInvoiceDollar,\n  faCaretDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useIsMobile } from \"@/hooks/useIsMobile\";\n\n// Import all example components\nimport FinancialDashboard from \"@/components/examples/finance/FinancialDashboard\";\nimport ManufacturingMetrics from \"@/components/examples/manufacturing/ManufacturingMetrics\";\nimport HRManagement from \"@/components/examples/hr/HRManagement\";\nimport BillingDashboard from \"@/components/examples/billing/BillingDashboard\";\n\n// Define example navigation items\nconst examples = [\n  {\n    id: \"finance\",\n    label: \"Financial\",\n    path: \"/examples/finance\",\n    icon: faChartLine,\n    component: FinancialDashboard,\n  },\n  {\n    id: \"manufacturing\",\n    label: \"Manufacturing\",\n    path: \"/examples/manufacturing\",\n    icon: faIndustry,\n    component: ManufacturingMetrics,\n  },\n  { id: \"hr\", label: \"HR\", path: \"/examples/hr\", icon: faUsers, component: HRManagement },\n  {\n    id: \"billing\",\n    label: \"Billing\",\n    path: \"/examples/billing\",\n    icon: faFileInvoiceDollar,\n    component: BillingDashboard,\n  },\n];\n\nexport default function ExamplesLayout({ children }: { children: React.ReactNode }) {\n  const pathname = usePathname();\n  const router = useRouter();\n  const isMobile = useIsMobile();\n\n  // Determine current active example\n  const currentPath = pathname;\n  const currentExample =\n    examples.find((example) => currentPath.includes(example.id)) || examples[0];\n\n  // Title mapping for each example\n  const exampleTitles = {\n    finance: \"Financial Dashboard\",\n    manufacturing: \"Manufacturing Metrics\",\n    hr: \"HR Management\",\n    billing: \"Revenue Recognition\",\n  };\n\n  const handleLinkClick = (linkPath: string, linkName: string) => {\n    trackLinkClick(linkName, linkPath);\n    router.push(linkPath);\n  };\n\n  // Mobile dropdown menu items\n  const menuItems = examples.map((example) => ({\n    key: example.id,\n    label: example.label,\n    icon: <FontAwesomeIcon icon={example.icon} />,\n    onClick: () => handleLinkClick(example.path, example.label),\n  }));\n\n  return (\n    <PageLayout containerWidth=\"w-full\" sidebar={null}>\n      <div className=\"flex flex-col w-full h-full px-4 py-2\">\n        {/* Navigation Bar */}\n        <div className=\"mb-4 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3\">\n          <h1 className=\"text-xl font-semibold\">\n            {exampleTitles[currentExample.id as keyof typeof exampleTitles]}\n          </h1>\n\n          {/* Show dropdown on mobile, buttons on desktop */}\n          {isMobile ? (\n            <Dropdown\n              menu={{ items: menuItems, selectedKeys: [currentExample.id] }}\n              trigger={[\"click\"]}\n            >\n              <Button type=\"primary\">\n                <div className=\"flex items-center gap-2\">\n                  <FontAwesomeIcon icon={currentExample.icon} />\n                  {currentExample.label}\n                  <FontAwesomeIcon icon={faCaretDown} />\n                </div>\n              </Button>\n            </Dropdown>\n          ) : (\n            <Space size=\"middle\" wrap className=\"self-end sm:self-auto\">\n              {examples.map((example, index) => (\n                <Button\n                  key={index}\n                  type={currentExample.id === example.id ? \"primary\" : \"default\"}\n                  icon={<FontAwesomeIcon icon={example.icon} />}\n                  onClick={() => handleLinkClick(example.path, example.label)}\n                >\n                  {example.label}\n                </Button>\n              ))}\n            </Space>\n          )}\n        </div>\n\n        {/* Example Content */}\n        <div className=\"flex-grow\">{children}</div>\n      </div>\n    </PageLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}