{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/app/examples/finance/finance-rows.ts"],"sourcesContent":["import { Row } from \"simple-table-core\";\n\n// Define known companies by sector\nconst COMPANIES_BY_SECTOR = {\n  Technology: [\n    { ticker: \"AAPL\", name: \"Apple Inc.\", price: 182.52, marketCap: 2852.4 },\n    { ticker: \"MSFT\", name: \"Microsoft Corporation\", price: 338.14, marketCap: 2512.9 },\n    { ticker: \"GOOGL\", name: \"Alphabet Inc.\", price: 142.65, marketCap: 1789.3 },\n    { ticker: \"AMZN\", name: \"Amazon.com Inc.\", price: 175.35, marketCap: 1811.2 },\n    { ticker: \"META\", name: \"Meta Platforms Inc.\", price: 478.22, marketCap: 1214.6 },\n    { ticker: \"TSLA\", name: \"Tesla Inc.\", price: 177.58, marketCap: 567.2 },\n    { ticker: \"NVDA\", name: \"NVIDIA Corporation\", price: 110.55, marketCap: 2724.1 },\n    { ticker: \"NFLX\", name: \"Netflix Inc.\", price: 628.55, marketCap: 272.3 },\n  ],\n  Healthcare: [\n    { ticker: \"JNJ\", name: \"Johnson & Johnson\", price: 147.52, marketCap: 355.3 },\n    { ticker: \"PFE\", name: \"Pfizer Inc.\", price: 26.95, marketCap: 152.9 },\n    { ticker: \"UNH\", name: \"UnitedHealth Group Inc.\", price: 527.24, marketCap: 487.5 },\n    { ticker: \"MRK\", name: \"Merck & Co Inc.\", price: 105.11, marketCap: 265.8 },\n    { ticker: \"ABT\", name: \"Abbott Laboratories\", price: 107.57, marketCap: 187.1 },\n  ],\n  Financial: [\n    { ticker: \"JPM\", name: \"JPMorgan Chase & Co.\", price: 182.06, marketCap: 522.7 },\n    { ticker: \"BAC\", name: \"Bank of America Corp.\", price: 38.34, marketCap: 301.2 },\n    { ticker: \"WFC\", name: \"Wells Fargo & Co.\", price: 56.94, marketCap: 204.1 },\n    { ticker: \"V\", name: \"Visa Inc.\", price: 275.96, marketCap: 583.2 },\n    { ticker: \"MA\", name: \"Mastercard Inc.\", price: 445.58, marketCap: 416.8 },\n  ],\n  Consumer: [\n    { ticker: \"PG\", name: \"Procter & Gamble Co.\", price: 169.85, marketCap: 400.2 },\n    { ticker: \"KO\", name: \"Coca-Cola Co.\", price: 62.17, marketCap: 268.6 },\n    { ticker: \"PEP\", name: \"PepsiCo Inc.\", price: 169.55, marketCap: 233.2 },\n    { ticker: \"WMT\", name: \"Walmart Inc.\", price: 59.68, marketCap: 481.4 },\n    { ticker: \"MCD\", name: \"McDonald's Corp.\", price: 257.75, marketCap: 186.9 },\n  ],\n  Energy: [\n    { ticker: \"XOM\", name: \"Exxon Mobil Corp.\", price: 113.9, marketCap: 453.2 },\n    { ticker: \"CVX\", name: \"Chevron Corp.\", price: 145.29, marketCap: 271.4 },\n    { ticker: \"COP\", name: \"ConocoPhillips\", price: 108.14, marketCap: 126.5 },\n    { ticker: \"SLB\", name: \"Schlumberger NV\", price: 43.44, marketCap: 62.1 },\n  ],\n  Industrial: [\n    { ticker: \"GE\", name: \"General Electric Co.\", price: 159.91, marketCap: 174.5 },\n    { ticker: \"BA\", name: \"Boeing Co.\", price: 181.5, marketCap: 110.9 },\n    { ticker: \"HON\", name: \"Honeywell International Inc.\", price: 201.58, marketCap: 131.7 },\n    { ticker: \"CAT\", name: \"Caterpillar Inc.\", price: 345.54, marketCap: 168.9 },\n    { ticker: \"UPS\", name: \"United Parcel Service Inc.\", price: 134.85, marketCap: 115.3 },\n  ],\n  Telecom: [\n    { ticker: \"VZ\", name: \"Verizon Communications Inc.\", price: 40.81, marketCap: 171.9 },\n    { ticker: \"T\", name: \"AT&T Inc.\", price: 17.16, marketCap: 123.0 },\n    { ticker: \"CMCSA\", name: \"Comcast Corp.\", price: 40.01, marketCap: 158.1 },\n  ],\n};\n\n// Generate realistic finance data with known companies\nexport const generateFinanceData = (): Row[] => {\n  const sectors = Object.keys(COMPANIES_BY_SECTOR);\n  let rowId = 0;\n\n  return sectors.map((sector) => {\n    const companies = COMPANIES_BY_SECTOR[sector as keyof typeof COMPANIES_BY_SECTOR];\n\n    const children = companies.map((company) => {\n      // Use realistic company data as a base\n      const price = company.price * (0.9 + Math.random() * 0.2); // +/- 10% from base price\n      const marketCap = company.marketCap;\n      const peRatio = parseFloat((Math.random() * 40 + 5).toFixed(1));\n      const dividendYield = parseFloat((Math.random() * 5).toFixed(2));\n      const revenueGrowth = parseFloat((Math.random() * 40 - 10).toFixed(1));\n      const profitMargin = parseFloat((Math.random() * 30).toFixed(1));\n      const riskFactor = Math.floor(Math.random() * 10) + 1;\n      const esgScore = Math.floor(Math.random() * 80) + 20;\n      const analystRating = parseFloat((Math.random() * 3 + 2).toFixed(1)); // 2.0-5.0 range for ratings\n\n      // Calculate a price change with more realistic distribution\n      let priceChangePercent;\n      const rand = Math.random();\n      if (rand < 0.05) {\n        // Rare big drops\n        priceChangePercent = parseFloat((Math.random() * -15 - 5).toFixed(2));\n      } else if (rand < 0.3) {\n        // Common small drops\n        priceChangePercent = parseFloat((Math.random() * -5).toFixed(2));\n      } else if (rand < 0.7) {\n        // Common small gains\n        priceChangePercent = parseFloat((Math.random() * 5).toFixed(2));\n      } else if (rand < 0.95) {\n        // Common large gains\n        priceChangePercent = parseFloat((Math.random() * 10).toFixed(2));\n      } else {\n        // Rare big gains\n        priceChangePercent = parseFloat((Math.random() * 15 + 10).toFixed(2));\n      }\n\n      return {\n        rowMeta: { rowId: rowId++, isExpanded: true },\n        rowData: {\n          sectorName: sector,\n          ticker: company.ticker,\n          companyName: company.name,\n          price,\n          priceChangePercent,\n          marketCap,\n          peRatio,\n          dividendYield,\n          revenueGrowth,\n          profitMargin,\n          riskFactor,\n          esgScore,\n          analystRating,\n        },\n      };\n    });\n\n    // Calculate sector totals and averages\n    const avgPriceChange = parseFloat(\n      (\n        children.reduce((sum, child) => sum + (child.rowData.priceChangePercent as number), 0) /\n        children.length\n      ).toFixed(2)\n    );\n    const avgPERatio = parseFloat(\n      (\n        children.reduce((sum, child) => sum + (child.rowData.peRatio as number), 0) /\n        children.length\n      ).toFixed(1)\n    );\n    const avgDividendYield = parseFloat(\n      (\n        children.reduce((sum, child) => sum + (child.rowData.dividendYield as number), 0) /\n        children.length\n      ).toFixed(2)\n    );\n    const totalMarketCap = parseFloat(\n      children.reduce((sum, child) => sum + (child.rowData.marketCap as number), 0).toFixed(1)\n    );\n    const avgESGScore = Math.round(\n      children.reduce((sum, child) => sum + (child.rowData.esgScore as number), 0) / children.length\n    );\n\n    return {\n      rowMeta: { rowId: rowId++, isExpanded: true, children },\n      rowData: {\n        sectorName: sector,\n        ticker: \"—\",\n        companyName: `${sector} Sector (${children.length})`,\n        price: \"—\",\n        priceChangePercent: avgPriceChange,\n        marketCap: totalMarketCap,\n        peRatio: avgPERatio,\n        dividendYield: avgDividendYield,\n        revenueGrowth: \"—\",\n        profitMargin: \"—\",\n        riskFactor: \"—\",\n        esgScore: avgESGScore,\n        analystRating: \"—\",\n      },\n    };\n  });\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/app/examples/finance/finance-headers.tsx"],"sourcesContent":["import { HeaderObject } from \"simple-table-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faThumbsUp,\n  faThumbsDown,\n  faArrowUp,\n  faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Tag, Tooltip } from \"antd\";\n\nexport const HEADERS: HeaderObject[] = [\n  {\n    accessor: \"ticker\",\n    label: \"Symbol\",\n    width: 100,\n    isSortable: true,\n    isEditable: false,\n    align: \"left\",\n    pinned: \"left\",\n    type: \"string\",\n  },\n  {\n    accessor: \"companyInfo\",\n    label: \"Company Information\",\n    width: 380,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"sectorName\",\n        label: \"Sector\",\n        width: 180,\n        expandable: true,\n        isSortable: true,\n        isEditable: false,\n        align: \"left\",\n        type: \"string\",\n      },\n      {\n        accessor: \"companyName\",\n        label: \"Name\",\n        width: 200,\n        isSortable: true,\n        isEditable: false,\n        align: \"left\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    accessor: \"priceMetrics\",\n    label: \"Price Performance\",\n    width: 250,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"price\",\n        label: \"Price (USD)\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.price === \"—\") return \"—\";\n          return `$${(row.rowData.price as number).toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}`;\n        },\n      },\n      {\n        accessor: \"priceChangePercent\",\n        label: \"Change %\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.priceChangePercent === \"—\") return \"—\";\n          const value = row.rowData.priceChangePercent as number;\n          const color = value < 0 ? \"text-red-600\" : value > 0 ? \"text-green-600\" : \"text-gray-600\";\n          const prefix = value > 0 ? \"+\" : \"\";\n          const bgColor = value < 0 ? \"bg-red-50\" : value > 0 ? \"bg-green-50\" : \"\";\n\n          return (\n            <div className={`px-2 py-1 rounded font-medium ${bgColor} ${color}`}>\n              {prefix}\n              {value.toFixed(2)}%\n            </div>\n          );\n        },\n      },\n    ],\n  },\n  {\n    accessor: \"fundamentals\",\n    label: \"Fundamentals\",\n    width: 380,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"marketCap\",\n        label: \"Mkt Cap ($B)\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.marketCap === \"—\") return \"—\";\n          return (row.rowData.marketCap as number).toLocaleString(\"en-US\", {\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1,\n          });\n        },\n      },\n      {\n        accessor: \"peRatio\",\n        label: \"P/E Ratio\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.peRatio === \"—\") return \"—\";\n          return (row.rowData.peRatio as number).toFixed(1);\n        },\n      },\n      {\n        accessor: \"dividendYield\",\n        label: \"Div Yield\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.dividendYield === \"—\") return \"—\";\n          return `${(row.rowData.dividendYield as number).toFixed(2)}%`;\n        },\n      },\n    ],\n  },\n  {\n    accessor: \"growth\",\n    label: \"Growth & Profitability\",\n    width: 260,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"revenueGrowth\",\n        label: \"Rev Growth\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.revenueGrowth === \"—\") return \"—\";\n          const value = row.rowData.revenueGrowth as number;\n          const color = value < 0 ? \"text-red-600\" : value > 0 ? \"text-green-600\" : \"text-gray-600\";\n          const prefix = value > 0 ? \"+\" : \"\";\n          return (\n            <span className={color}>\n              {prefix}\n              {value}%\n            </span>\n          );\n        },\n      },\n      {\n        accessor: \"profitMargin\",\n        label: \"Profit Margin\",\n        width: 130,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.profitMargin === \"—\") return \"—\";\n          return `${row.rowData.profitMargin}%`;\n        },\n      },\n    ],\n  },\n  {\n    accessor: \"ratings\",\n    label: \"Ratings & Scores\",\n    width: 270,\n    isSortable: false,\n    children: [\n      {\n        accessor: \"analystRating\",\n        label: \"Analyst Rating\",\n        width: 150,\n        isSortable: true,\n        isEditable: false,\n        align: \"center\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.analystRating === \"—\") return \"—\";\n          const value = row.rowData.analystRating as number;\n\n          // Text ratings\n          const ratingLabels = {\n            5: \"Strong Buy\",\n            4.5: \"Buy+\",\n            4: \"Buy\",\n            3.5: \"Overweight\",\n            3: \"Hold\",\n            2.5: \"Underweight\",\n            2: \"Sell\",\n            1.5: \"Sell+\",\n            1: \"Strong Sell\",\n          };\n\n          // Color based on rating\n          const getRatingColor = (val: number) => {\n            if (val >= 4.5) return \"green\";\n            if (val >= 4) return \"green\";\n            if (val >= 3.5) return \"cyan\";\n            if (val >= 3) return \"blue\";\n            if (val >= 2.5) return \"orange\";\n            if (val >= 2) return \"volcano\";\n            return \"red\";\n          };\n\n          const ratingLabel =\n            ratingLabels[(Math.round(value * 2) / 2) as keyof typeof ratingLabels] || \"Hold\";\n          const color = getRatingColor(value);\n\n          const icon = value >= 4 ? faThumbsUp : value < 3 ? faThumbsDown : null;\n          const direction = value >= 4 ? faArrowUp : value < 3 ? faArrowDown : null;\n\n          return (\n            <Tooltip title={`${value.toFixed(1)} / 5.0`}>\n              <Tag color={color} className=\"py-1 px-2\">\n                {icon && <FontAwesomeIcon icon={icon} className=\"mr-1\" />}\n                {ratingLabel}\n                {direction && <FontAwesomeIcon icon={direction} className=\"ml-1\" size=\"xs\" />}\n              </Tag>\n            </Tooltip>\n          );\n        },\n      },\n      {\n        accessor: \"esgScore\",\n        label: \"ESG Score\",\n        width: 120,\n        isSortable: true,\n        isEditable: false,\n        align: \"right\",\n        type: \"number\",\n        cellRenderer: ({ row }) => {\n          if (row.rowData.esgScore === \"—\") return \"—\";\n          const value = row.rowData.esgScore as number;\n          // Color based on score\n          const getColorClass = () => {\n            if (value >= 80) return \"text-green-600\";\n            if (value >= 60) return \"text-green-500\";\n            if (value >= 40) return \"text-orange-500\";\n            return \"text-red-500\";\n          };\n\n          return <span className={getColorClass()}>{value}</span>;\n        },\n      },\n    ],\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/app/examples/finance/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { SimpleTable } from \"simple-table-core\";\nimport { generateFinanceData } from \"./finance-rows\";\nimport { HEADERS } from \"./finance-headers\";\nimport \"simple-table-core/styles.css\";\n\nconst data = generateFinanceData();\n\nconst FinancialDashboard = ({ height = \"70dvh\" }: { height?: string }) => {\n  return (\n    <SimpleTable\n      columnResizing\n      columnReordering\n      defaultHeaders={HEADERS}\n      rows={data}\n      height={height}\n      theme=\"light\"\n      selectableCells\n      selectableColumns\n    />\n  );\n};\n\nexport default FinancialDashboard;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;;AAOA,MAAM,OAAO,CAAA,GAAA,uJAAA,CAAA,sBAAmB,AAAD;AAE/B,MAAM,qBAAqB,CAAC,EAAE,SAAS,OAAO,EAAuB;IACnE,qBACE,6LAAC,iKAAA,CAAA,cAAW;QACV,cAAc;QACd,gBAAgB;QAChB,gBAAgB,2JAAA,CAAA,UAAO;QACvB,MAAM;QACN,QAAQ;QACR,OAAM;QACN,eAAe;QACf,iBAAiB;;;;;;AAGvB;KAbM;uCAeS","debugId":null}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"file":"index.es.js","sources":[],"names":[],"mappings":"","debugId":null}}]
}