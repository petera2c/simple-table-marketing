{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/demos/QuickStartDemo.tsx"],"sourcesContent":["\"use client\";\n\nimport { SimpleTable, HeaderObject } from \"simple-table-core\";\nimport \"simple-table-core/styles.css\";\n\nconst QuickStartDemo = () => {\n  // Sample data for a quick start demo\n  const data = [\n    {\n      id: 1,\n      name: \"John Doe\",\n      age: 28,\n      role: \"Developer\",\n      department: \"Engineering\",\n      startDate: \"2020-01-01\",\n    },\n    {\n      id: 2,\n      name: \"Jane Smith\",\n      age: 32,\n      role: \"Designer\",\n      department: \"Design\",\n      startDate: \"2020-01-01\",\n    },\n    {\n      id: 3,\n      name: \"Bob Johnson\",\n      age: 45,\n      role: \"Manager\",\n      department: \"Management\",\n      startDate: \"2020-01-01\",\n    },\n    {\n      id: 4,\n      name: \"Alice Williams\",\n      age: 24,\n      role: \"Intern\",\n      department: \"Internship\",\n      startDate: \"2020-01-01\",\n    },\n    {\n      id: 5,\n      name: \"Charlie Brown\",\n      age: 37,\n      role: \"DevOps\",\n      department: \"Engineering\",\n      startDate: \"2020-01-01\",\n    },\n  ];\n\n  // Define headers\n  const headers: HeaderObject[] = [\n    { accessor: \"id\", label: \"ID\", width: 80, isSortable: true, type: \"number\" },\n    {\n      accessor: \"name\",\n      label: \"Name\",\n      minWidth: 80,\n      width: \"1fr\",\n      isSortable: true,\n      type: \"string\",\n    },\n    { accessor: \"age\", label: \"Age\", width: 100, isSortable: true, type: \"number\" },\n    { accessor: \"role\", label: \"Role\", width: 150, isSortable: true, type: \"string\" },\n    { accessor: \"department\", label: \"Department\", width: 150, isSortable: true, type: \"string\" },\n    { accessor: \"startDate\", label: \"Start Date\", width: 150, isSortable: true, type: \"date\" },\n  ];\n\n  // Map data to rows format expected by SimpleTable\n  const rows = data.map((item) => ({\n    rowMeta: { rowId: item.id, isExpanded: false },\n    rowData: item,\n  }));\n\n  return (\n    <SimpleTable defaultHeaders={headers} editColumns rows={rows} rowHeight={48} selectableCells />\n  );\n};\n\nexport default QuickStartDemo;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;;AAKA,MAAM,iBAAiB;IACrB,qCAAqC;IACrC,MAAM,OAAO;QACX;YACE,IAAI;YACJ,MAAM;YACN,KAAK;YACL,MAAM;YACN,YAAY;YACZ,WAAW;QACb;QACA;YACE,IAAI;YACJ,MAAM;YACN,KAAK;YACL,MAAM;YACN,YAAY;YACZ,WAAW;QACb;QACA;YACE,IAAI;YACJ,MAAM;YACN,KAAK;YACL,MAAM;YACN,YAAY;YACZ,WAAW;QACb;QACA;YACE,IAAI;YACJ,MAAM;YACN,KAAK;YACL,MAAM;YACN,YAAY;YACZ,WAAW;QACb;QACA;YACE,IAAI;YACJ,MAAM;YACN,KAAK;YACL,MAAM;YACN,YAAY;YACZ,WAAW;QACb;KACD;IAED,iBAAiB;IACjB,MAAM,UAA0B;QAC9B;YAAE,UAAU;YAAM,OAAO;YAAM,OAAO;YAAI,YAAY;YAAM,MAAM;QAAS;QAC3E;YACE,UAAU;YACV,OAAO;YACP,UAAU;YACV,OAAO;YACP,YAAY;YACZ,MAAM;QACR;QACA;YAAE,UAAU;YAAO,OAAO;YAAO,OAAO;YAAK,YAAY;YAAM,MAAM;QAAS;QAC9E;YAAE,UAAU;YAAQ,OAAO;YAAQ,OAAO;YAAK,YAAY;YAAM,MAAM;QAAS;QAChF;YAAE,UAAU;YAAc,OAAO;YAAc,OAAO;YAAK,YAAY;YAAM,MAAM;QAAS;QAC5F;YAAE,UAAU;YAAa,OAAO;YAAc,OAAO;YAAK,YAAY;YAAM,MAAM;QAAO;KAC1F;IAED,kDAAkD;IAClD,MAAM,OAAO,KAAK,GAAG,CAAC,CAAC,OAAS,CAAC;YAC/B,SAAS;gBAAE,OAAO,KAAK,EAAE;gBAAE,YAAY;YAAM;YAC7C,SAAS;QACX,CAAC;IAED,qBACE,6LAAC,iKAAA,CAAA,cAAW;QAAC,gBAAgB;QAAS,WAAW;QAAC,MAAM;QAAM,WAAW;QAAI,eAAe;;;;;;AAEhG;KAvEM;uCAyES","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/peter/Documents/dev_projects/simple-table-marketing/src/components/CodeBlock.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy, faCheck, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { Highlight, themes } from \"prism-react-renderer\";\n\ntype ThemeType = \"dark\" | \"light\";\n\ninterface CodeBlockProps {\n  className?: string;\n  code: string;\n  initialTheme?: ThemeType;\n  language?: string;\n  showLineNumbers?: boolean;\n  showThemeToggle?: boolean;\n}\n\nconst CodeBlock = ({\n  className = \"\",\n  code,\n  initialTheme = \"dark\",\n  language = \"tsx\",\n  showLineNumbers = true,\n  showThemeToggle = true,\n}: CodeBlockProps) => {\n  const [copied, setCopied] = useState(false);\n  const [theme, setTheme] = useState<ThemeType>(initialTheme);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(code).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    });\n  };\n\n  const toggleTheme = () => {\n    setTheme((prev) => (prev === \"dark\" ? \"light\" : \"dark\"));\n  };\n\n  const selectedTheme = theme === \"dark\" ? themes.nightOwl : themes.nightOwlLight;\n\n  // Get language display name\n  const getLanguageDisplayName = () => {\n    const displayNames: Record<string, string> = {\n      jsx: \"React JSX\",\n      tsx: \"React TSX\",\n      javascript: \"JavaScript\",\n      typescript: \"TypeScript\",\n      css: \"CSS\",\n      html: \"HTML\",\n      bash: \"Shell\",\n      json: \"JSON\",\n    };\n\n    return displayNames[language] || language.toUpperCase();\n  };\n\n  // Filename extraction from first comment line (e.g. \"// SomeFile.tsx\")\n  const extractFilename = (): string | null => {\n    if (!code) return null;\n\n    const firstLine = code.trim().split(\"\\n\")[0];\n    if (firstLine.startsWith(\"// \") || firstLine.startsWith(\"/* \")) {\n      const potentialFilename = firstLine.replace(/^\\/\\/\\s*|^\\/\\*\\s*/, \"\").trim();\n      if (potentialFilename.includes(\".\")) {\n        return potentialFilename;\n      }\n    }\n    return null;\n  };\n\n  const filename = extractFilename();\n\n  return (\n    <div className={`rounded-md mb-6 overflow-hidden shadow-lg relative ${className}`}>\n      <div className=\"flex items-center justify-between px-4 py-2 bg-gray-900 text-gray-400 text-xs font-mono\">\n        <div className=\"flex items-center gap-2\">\n          <span>{getLanguageDisplayName()}</span>\n          {filename && (\n            <span className=\"text-gray-500 ml-2 border-l border-gray-700 pl-2\">{filename}</span>\n          )}\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {showThemeToggle && (\n            <button\n              className=\"flex items-center gap-1 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white px-2 py-1 rounded cursor-pointer transition-colors\"\n              onClick={toggleTheme}\n              title={theme === \"dark\" ? \"Switch to light theme\" : \"Switch to dark theme\"}\n            >\n              <FontAwesomeIcon icon={theme === \"dark\" ? faSun : faMoon} className=\"text-xs\" />\n            </button>\n          )}\n          <div\n            className=\"flex items-center gap-1 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white px-2 py-1 rounded cursor-pointer transition-colors\"\n            onClick={handleCopy}\n            aria-label=\"Copy code\"\n            title=\"Copy to clipboard\"\n          >\n            <FontAwesomeIcon icon={copied ? faCheck : faCopy} className=\"text-xs\" />\n            <span className=\"sm:inline hidden\">{copied ? \"Copied!\" : \"Copy\"}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto max-w-full\">\n        <Highlight\n          theme={selectedTheme}\n          code={filename ? code.replace(/^\\/\\/.*?\\n|^\\/\\*.*?\\n/, \"\") : code.trim()}\n          language={language as any}\n        >\n          {({ style, tokens, getLineProps, getTokenProps }) => (\n            <pre\n              className=\"p-4 overflow-auto text-sm max-h-[64vh]\"\n              style={{\n                ...style,\n                backgroundColor: theme === \"dark\" ? \"#011627\" : \"#FBFBFB\",\n              }}\n            >\n              {tokens.map((line, i) => {\n                // Check if this line is a special comment like \"// ... existing code ...\"\n                const isSpecialComment =\n                  line.length > 1 &&\n                  line[0].content.match(/\\/\\/|\\/\\*|#/) &&\n                  line.some((token) => token.content.includes(\"existing code\"));\n\n                const lineProps = getLineProps({ line });\n\n                return (\n                  <div\n                    key={i}\n                    {...lineProps}\n                    className={`table-row ${isSpecialComment ? \"opacity-60 italic\" : \"\"}`}\n                  >\n                    {showLineNumbers && (\n                      <span className=\"table-cell text-right pr-4 select-none opacity-50 text-xs w-8\">\n                        {i + 1}\n                      </span>\n                    )}\n                    <span className=\"table-cell whitespace-pre word-break\">\n                      {line.map((token, key) => (\n                        <span\n                          key={key}\n                          {...getTokenProps({ token })}\n                          className={token.types.includes(\"comment\") ? \"italic opacity-75\" : \"\"}\n                        />\n                      ))}\n                    </span>\n                  </div>\n                );\n              })}\n            </pre>\n          )}\n        </Highlight>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeBlock;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAkBA,MAAM,YAAY,CAAC,EACjB,YAAY,EAAE,EACd,IAAI,EACJ,eAAe,MAAM,EACrB,WAAW,KAAK,EAChB,kBAAkB,IAAI,EACtB,kBAAkB,IAAI,EACP;;IACf,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa;IAE9C,MAAM,aAAa;QACjB,UAAU,SAAS,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC;YACvC,UAAU;YACV,WAAW,IAAM,UAAU,QAAQ;QACrC;IACF;IAEA,MAAM,cAAc;QAClB,SAAS,CAAC,OAAU,SAAS,SAAS,UAAU;IAClD;IAEA,MAAM,gBAAgB,UAAU,SAAS,+JAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,+JAAA,CAAA,SAAM,CAAC,aAAa;IAE/E,4BAA4B;IAC5B,MAAM,yBAAyB;QAC7B,MAAM,eAAuC;YAC3C,KAAK;YACL,KAAK;YACL,YAAY;YACZ,YAAY;YACZ,KAAK;YACL,MAAM;YACN,MAAM;YACN,MAAM;QACR;QAEA,OAAO,YAAY,CAAC,SAAS,IAAI,SAAS,WAAW;IACvD;IAEA,uEAAuE;IACvE,MAAM,kBAAkB;QACtB,IAAI,CAAC,MAAM,OAAO;QAElB,MAAM,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE;QAC5C,IAAI,UAAU,UAAU,CAAC,UAAU,UAAU,UAAU,CAAC,QAAQ;YAC9D,MAAM,oBAAoB,UAAU,OAAO,CAAC,qBAAqB,IAAI,IAAI;YACzE,IAAI,kBAAkB,QAAQ,CAAC,MAAM;gBACnC,OAAO;YACT;QACF;QACA,OAAO;IACT;IAEA,MAAM,WAAW;IAEjB,qBACE,6LAAC;QAAI,WAAW,CAAC,mDAAmD,EAAE,WAAW;;0BAC/E,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;0CAAM;;;;;;4BACN,0BACC,6LAAC;gCAAK,WAAU;0CAAoD;;;;;;;;;;;;kCAGxE,6LAAC;wBAAI,WAAU;;4BACZ,iCACC,6LAAC;gCACC,WAAU;gCACV,SAAS;gCACT,OAAO,UAAU,SAAS,0BAA0B;0CAEpD,cAAA,6LAAC,uKAAA,CAAA,kBAAe;oCAAC,MAAM,UAAU,SAAS,2KAAA,CAAA,QAAK,GAAG,2KAAA,CAAA,SAAM;oCAAE,WAAU;;;;;;;;;;;0CAGxE,6LAAC;gCACC,WAAU;gCACV,SAAS;gCACT,cAAW;gCACX,OAAM;;kDAEN,6LAAC,uKAAA,CAAA,kBAAe;wCAAC,MAAM,SAAS,2KAAA,CAAA,UAAO,GAAG,2KAAA,CAAA,SAAM;wCAAE,WAAU;;;;;;kDAC5D,6LAAC;wCAAK,WAAU;kDAAoB,SAAS,YAAY;;;;;;;;;;;;;;;;;;;;;;;;0BAK/D,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,+JAAA,CAAA,YAAS;oBACR,OAAO;oBACP,MAAM,WAAW,KAAK,OAAO,CAAC,yBAAyB,MAAM,KAAK,IAAI;oBACtE,UAAU;8BAET,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,iBAC9C,6LAAC;4BACC,WAAU;4BACV,OAAO;gCACL,GAAG,KAAK;gCACR,iBAAiB,UAAU,SAAS,YAAY;4BAClD;sCAEC,OAAO,GAAG,CAAC,CAAC,MAAM;gCACjB,0EAA0E;gCAC1E,MAAM,mBACJ,KAAK,MAAM,GAAG,KACd,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,kBACtB,KAAK,IAAI,CAAC,CAAC,QAAU,MAAM,OAAO,CAAC,QAAQ,CAAC;gCAE9C,MAAM,YAAY,aAAa;oCAAE;gCAAK;gCAEtC,qBACE,6LAAC;oCAEE,GAAG,SAAS;oCACb,WAAW,CAAC,UAAU,EAAE,mBAAmB,sBAAsB,IAAI;;wCAEpE,iCACC,6LAAC;4CAAK,WAAU;sDACb,IAAI;;;;;;sDAGT,6LAAC;4CAAK,WAAU;sDACb,KAAK,GAAG,CAAC,CAAC,OAAO,oBAChB,6LAAC;oDAEE,GAAG,cAAc;wDAAE;oDAAM,EAAE;oDAC5B,WAAW,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,sBAAsB;mDAF9D;;;;;;;;;;;mCAZN;;;;;4BAoBX;;;;;;;;;;;;;;;;;;;;;;AAOd;GA3IM;KAAA;uCA6IS","debugId":null}}]
}